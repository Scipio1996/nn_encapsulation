Experiment: base_101_EM_v6
------------ Train and Test Options -----------------
E_step_norm: True
add_cap_BN_relu: False
add_cap_dropout: False
b_init: zero
base_save_folder: result
batch_size_test: 128
batch_size_train: 128
beta1: 0.9
cap_model: v0
comp_cap: False
dataset: cifar10
debug_mode: False
device_id: 0
draw_hist: False
dropout_p: 0.2
experiment_name: base_101_EM_v6
file_name: result/base_101_EM_v6/opt_train_val_START_epoch_0_END_600.txt
gamma: 0.1
less_data_aug: False
loss_form: CE
lr: 0.0001
manual_seed: -1
max_epoch: 600
measure_time: False
momentum: 0.9
multi_crop_test: False
no_visdom: False
non_target_j: False
num_workers: 2
optim: adam
phase: train_val
port_id: 8000
pre_ch_num: 256
primary_cap_num: 32
random_seed: 3835
route: EM
route_num: 3
s35: False
save_epoch: 25
save_folder: result/base_101_EM_v6
schedule: [200, 300, 400]
show_freq: 100
show_test_after_epoch: 100
squash_manner: paper
use_cuda: True
use_instanceBN: False
weight_decay: 0.0005
------------------ End --------------------
DataParallel (
  (module): CapNet(
    (tranfer_conv): Conv2d(3, 256, kernel_size=(9, 9), stride=(2, 2), padding=(1, 1))
    (tranfer_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (tranfer_relu): ReLU(inplace)
    (tranfer_conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
    (tranfer_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (tranfer_relu1): ReLU(inplace)
    (generate_activate): Sequential(
      (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
      (2): ReLU()
    )
    (cap_layer): CapLayer(
      (W): Conv2d(256, 5120, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
  ), weights=((256, 3, 9, 9), (256,), (256,), (256,), (256, 256, 3, 3), (256,), (256,), (256,), (32, 256, 3, 3), (32,), (32,), (32,), (10,), (10,), (5120, 8, 1, 1), (5120,)), parameters=773492
)
Total param num # 2.950638 Mb

init learning rate 0.0001000000 at iter 0

[base_101_EM_v6]	epoch/iter [0/600][0/391] ||	Loss: 2.3556, Top1_err: 87.5000, Top5_err: 46.8750 ||	Data/batch time: 0.1774/1.4027
[base_101_EM_v6]	epoch/iter [0/600][100/391] ||	Loss: 2.2002, Top1_err: 81.1030, Top5_err: 32.5418 ||	Data/batch time: 0.0022/0.1185
[base_101_EM_v6]	epoch/iter [0/600][200/391] ||	Loss: 2.1363, Top1_err: 77.8451, Top5_err: 28.1172 ||	Data/batch time: 0.0013/0.1122
[base_101_EM_v6]	epoch/iter [0/600][300/391] ||	Loss: 2.0870, Top1_err: 75.7397, Top5_err: 25.1583 ||	Data/batch time: 0.0010/0.1101
[base_101_EM_v6]	epoch/iter [0/600][390/391] ||	Loss: 2.0517, Top1_err: 74.1040, Top5_err: 23.4720 ||	Data/batch time: 0.0008/0.1096
Summary	epoch/iter [0/600] ||	TRAIN, Top1_err: 74.1040, Top5_err: 23.4720 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

model saved at result/base_101_EM_v6/epoch_1.pth
[base_101_EM_v6]	epoch/iter [1/600][0/391] ||	Loss: 1.8956, Top1_err: 66.4062, Top5_err: 17.1875 ||	Data/batch time: 0.1927/0.2756
[base_101_EM_v6]	epoch/iter [1/600][100/391] ||	Loss: 1.8706, Top1_err: 66.3985, Top5_err: 15.6791 ||	Data/batch time: 0.0023/0.1075
[base_101_EM_v6]	epoch/iter [1/600][200/391] ||	Loss: 1.8525, Top1_err: 65.3646, Top5_err: 14.9370 ||	Data/batch time: 0.0013/0.1066
[base_101_EM_v6]	epoch/iter [1/600][300/391] ||	Loss: 1.8274, Top1_err: 64.2260, Top5_err: 14.3506 ||	Data/batch time: 0.0010/0.1063
[base_101_EM_v6]	epoch/iter [1/600][390/391] ||	Loss: 1.8099, Top1_err: 63.4980, Top5_err: 13.9080 ||	Data/batch time: 0.0009/0.1061
Summary	epoch/iter [1/600] ||	TRAIN, Top1_err: 63.4980, Top5_err: 13.9080 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[base_101_EM_v6]	epoch/iter [2/600][0/391] ||	Loss: 1.7604, Top1_err: 59.3750, Top5_err: 16.4062 ||	Data/batch time: 0.2339/0.3073
[base_101_EM_v6]	epoch/iter [2/600][100/391] ||	Loss: 1.7187, Top1_err: 59.5684, Top5_err: 11.8270 ||	Data/batch time: 0.0027/0.1077
[base_101_EM_v6]	epoch/iter [2/600][200/391] ||	Loss: 1.7032, Top1_err: 59.3400, Top5_err: 11.4467 ||	Data/batch time: 0.0016/0.1067
[base_101_EM_v6]	epoch/iter [2/600][300/391] ||	Loss: 1.6855, Top1_err: 58.7313, Top5_err: 10.9712 ||	Data/batch time: 0.0012/0.1064
[base_101_EM_v6]	epoch/iter [2/600][390/391] ||	Loss: 1.6700, Top1_err: 57.8980, Top5_err: 10.7940 ||	Data/batch time: 0.0010/0.1061
Summary	epoch/iter [2/600] ||	TRAIN, Top1_err: 57.8980, Top5_err: 10.7940 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[base_101_EM_v6]	epoch/iter [3/600][0/391] ||	Loss: 1.6365, Top1_err: 57.8125, Top5_err: 8.5938 ||	Data/batch time: 0.1965/0.2703
[base_101_EM_v6]	epoch/iter [3/600][100/391] ||	Loss: 1.6162, Top1_err: 55.8632, Top5_err: 9.8314 ||	Data/batch time: 0.0023/0.1074
[base_101_EM_v6]	epoch/iter [3/600][200/391] ||	Loss: 1.6001, Top1_err: 55.2938, Top5_err: 9.6354 ||	Data/batch time: 0.0013/0.1066
[base_101_EM_v6]	epoch/iter [3/600][300/391] ||	Loss: 1.5922, Top1_err: 54.8848, Top5_err: 9.5333 ||	Data/batch time: 0.0010/0.1063
[base_101_EM_v6]	epoch/iter [3/600][390/391] ||	Loss: 1.5758, Top1_err: 54.1100, Top5_err: 9.1780 ||	Data/batch time: 0.0009/0.1061
Summary	epoch/iter [3/600] ||	TRAIN, Top1_err: 54.1100, Top5_err: 9.1780 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[base_101_EM_v6]	epoch/iter [4/600][0/391] ||	Loss: 1.5578, Top1_err: 50.0000, Top5_err: 8.5938 ||	Data/batch time: 0.2134/0.2876
[base_101_EM_v6]	epoch/iter [4/600][100/391] ||	Loss: 1.5229, Top1_err: 51.7249, Top5_err: 8.4545 ||	Data/batch time: 0.0024/0.1074
[base_101_EM_v6]	epoch/iter [4/600][200/391] ||	Loss: 1.5250, Top1_err: 52.0484, Top5_err: 8.5704 ||	Data/batch time: 0.0014/0.1065
[base_101_EM_v6]	epoch/iter [4/600][300/391] ||	Loss: 1.5090, Top1_err: 51.2900, Top5_err: 8.3342 ||	Data/batch time: 0.0010/0.1062
[base_101_EM_v6]	epoch/iter [4/600][390/391] ||	Loss: 1.5020, Top1_err: 51.0600, Top5_err: 8.1880 ||	Data/batch time: 0.0009/0.1061
Summary	epoch/iter [4/600] ||	TRAIN, Top1_err: 51.0600, Top5_err: 8.1880 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[base_101_EM_v6]	epoch/iter [5/600][0/391] ||	Loss: 1.5885, Top1_err: 53.9062, Top5_err: 10.1562 ||	Data/batch time: 0.2215/0.2952
[base_101_EM_v6]	epoch/iter [5/600][100/391] ||	Loss: 1.4414, Top1_err: 48.7856, Top5_err: 7.0158 ||	Data/batch time: 0.0026/0.1076
[base_101_EM_v6]	epoch/iter [5/600][200/391] ||	Loss: 1.4482, Top1_err: 49.1371, Top5_err: 7.3150 ||	Data/batch time: 0.0015/0.1066
[base_101_EM_v6]	epoch/iter [5/600][300/391] ||	Loss: 1.4459, Top1_err: 49.0449, Top5_err: 7.3116 ||	Data/batch time: 0.0011/0.1063
[base_101_EM_v6]	epoch/iter [5/600][390/391] ||	Loss: 1.4429, Top1_err: 48.8780, Top5_err: 7.4220 ||	Data/batch time: 0.0009/0.1061
Summary	epoch/iter [5/600] ||	TRAIN, Top1_err: 48.8780, Top5_err: 7.4220 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[base_101_EM_v6]	epoch/iter [6/600][0/391] ||	Loss: 1.4122, Top1_err: 52.3438, Top5_err: 8.5938 ||	Data/batch time: 0.1904/0.2646
[base_101_EM_v6]	epoch/iter [6/600][100/391] ||	Loss: 1.4119, Top1_err: 47.6949, Top5_err: 6.8379 ||	Data/batch time: 0.0022/0.1073
[base_101_EM_v6]	epoch/iter [6/600][200/391] ||	Loss: 1.4098, Top1_err: 47.8817, Top5_err: 6.8369 ||	Data/batch time: 0.0013/0.1065
[base_101_EM_v6]	epoch/iter [6/600][300/391] ||	Loss: 1.3999, Top1_err: 47.4979, Top5_err: 6.6886 ||	Data/batch time: 0.0010/0.1063
[base_101_EM_v6]	epoch/iter [6/600][390/391] ||	Loss: 1.3941, Top1_err: 47.2500, Top5_err: 6.6740 ||	Data/batch time: 0.0008/0.1061
Summary	epoch/iter [6/600] ||	TRAIN, Top1_err: 47.2500, Top5_err: 6.6740 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[base_101_EM_v6]	epoch/iter [7/600][0/391] ||	Loss: 1.3374, Top1_err: 44.5312, Top5_err: 5.4688 ||	Data/batch time: 0.2209/0.2954
[base_101_EM_v6]	epoch/iter [7/600][100/391] ||	Loss: 1.3653, Top1_err: 46.0396, Top5_err: 6.5362 ||	Data/batch time: 0.0026/0.1076
[base_101_EM_v6]	epoch/iter [7/600][200/391] ||	Loss: 1.3594, Top1_err: 45.8217, Top5_err: 6.3783 ||	Data/batch time: 0.0015/0.1067
[base_101_EM_v6]	epoch/iter [7/600][300/391] ||	Loss: 1.3508, Top1_err: 45.3281, Top5_err: 6.3928 ||	Data/batch time: 0.0011/0.1064
