Experiment: cap_102_OT_v6_1_4gpu
------------ Train and Test Options -----------------
C_form: l2
base_save_folder: result
batch_size_test: 128
batch_size_train: 128
beta1: 0.9
cap_N: 4
cap_model: v2
coeff_dimwise: False
connect_detail: all
dataset: cifar10
debug_mode: False
device_id: 2,5,6,7
draw_hist: False
encapsulate_G: False
experiment_name: cap_102_OT_v6_1_4gpu
fc_manner: default
file_name: result/cap_102_OT_v6_1_4gpu/opt_train_val_START_epoch_0_END_600.txt
gamma: 0.1
layerwise: False
less_data_aug: True
loss_fac: 1.0
loss_form: margin
lr: 0.0001
manner: 3
manual_seed: -1
max_epoch: 600
measure_time: False
momentum: 0.9
multi_crop_test: False
net_config: set4
no_bp_P_L: False
no_visdom: False
non_target_j: False
num_workers: 2
optim: adam
ot_loss: True
ot_loss_fac: 20.0
phase: train_val
port_id: 9000
random_seed: 9909
remove_bias: False
s35: True
save_epoch: 25
save_folder: result/cap_102_OT_v6_1_4gpu
schedule: [350, 450, 550]
show_freq: 100
show_test_after_epoch: 100
skip_critic: False
skip_relu: False
use_capBN: False
use_cuda: True
weight_decay: 0.0005
wider: False
withCapRoute: False
------------------ End --------------------
DataParallel (
  (module): CapNet(
    (module0): Sequential(
      (0): Conv2d (3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
      (2): ReLU(inplace)
    )
    (module1): CapConv2(
      (main_conv): CapConv(
        (block): ModuleList(
          (0): capConvRoute4(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
          (2): ReLU(inplace)
          (3): conv_squash(num_shared=32)
        )
        (conv_adjust_blob_shape): Conv2d (32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (sub_conv): CapConv(
        (block): ModuleList(
          (0): capConvRoute4(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (64, 64, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
          (2): ReLU(inplace)
          (3): conv_squash(num_shared=32)
          (4): capConvRoute4(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (64, 64, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
          (6): ReLU(inplace)
          (7): conv_squash(num_shared=32)
          (8): capConvRoute4(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (64, 64, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
          (10): ReLU(inplace)
          (11): conv_squash(num_shared=32)
        )
      )
    )
    (module2): CapConv2(
      (main_conv): CapConv(
        (block): ModuleList(
          (0): capConvRoute4(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (64, 128, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (2): ReLU(inplace)
          (3): conv_squash(num_shared=32)
        )
        (conv_adjust_blob_shape): Conv2d (64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      )
      (sub_conv): CapConv(
        (block): ModuleList(
          (0): capConvRoute4(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (128, 128, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (2): ReLU(inplace)
          (3): conv_squash(num_shared=32)
          (4): capConvRoute4(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (128, 128, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (6): ReLU(inplace)
          (7): conv_squash(num_shared=32)
          (8): capConvRoute4(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (128, 128, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (9): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (10): ReLU(inplace)
          (11): conv_squash(num_shared=32)
        )
      )
    )
    (module3): CapConv2(
      (main_conv): CapConv(
        (block): ModuleList(
          (0): capConvRoute3(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (128, 256, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
          (2): ReLU(inplace)
          (3): conv_squash(num_shared=32)
        )
        (conv_adjust_blob_shape): Conv2d (128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      )
      (sub_conv): CapConv(
        (block): ModuleList(
          (0): capConvRoute3(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (256, 256, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
          (2): ReLU(inplace)
          (3): conv_squash(num_shared=32)
          (4): capConvRoute3(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (256, 256, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (5): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
          (6): ReLU(inplace)
          (7): conv_squash(num_shared=32)
          (8): capConvRoute3(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (256, 256, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (9): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
          (10): ReLU(inplace)
          (11): conv_squash(num_shared=32)
        )
      )
    )
    (module4): CapConv2(
      (main_conv): CapConv(
        (block): ModuleList(
          (0): capConvRoute3(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (256, 512, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (512, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (512, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
          (2): ReLU(inplace)
          (3): conv_squash(num_shared=32)
        )
        (conv_adjust_blob_shape): Conv2d (256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      )
      (sub_conv): CapConv(
        (block): ModuleList(
          (0): capConvRoute3(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (512, 512, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (512, 512, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (512, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (512, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
          (2): ReLU(inplace)
          (3): conv_squash(num_shared=32)
          (4): capConvRoute3(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (512, 512, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (512, 512, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (512, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (512, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (5): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
          (6): ReLU(inplace)
          (7): conv_squash(num_shared=32)
          (8): capConvRoute3(
            (main_cap): ModuleList(
              (0): basic_conv(
                (conv): ModuleList(
                  (0): Conv2d (512, 512, kernel_size=(1, 1), stride=(1, 1), groups=32)
                )
              )
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (res_cap): ModuleList(
              (0): Conv2d (512, 512, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
              (2): ReLU()
              (3): conv_squash(num_shared=32)
            )
            (main_cap_coeff): Conv2d (512, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
            (res_cap_coeff): Conv2d (512, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
          )
          (9): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
          (10): ReLU(inplace)
          (11): conv_squash(num_shared=32)
        )
      )
    )
    (final_cls): CapFC(in_cap_num=512, out_cap_num=10, cap_dim=16, fc_manner=default)
    (module1_ot_loss): OptTrans(
      (G_net): Sequential(
        (0): ConvTranspose2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU()
        (3): conv_squash(num_shared=32)
      )
      (critic): Sequential(
        (0): Conv2d (64, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU()
        (3): Conv2d (16, 1, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU()
      )
    )
    (module2_ot_loss): OptTrans(
      (G_net): Sequential(
        (0): ConvTranspose2d (128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), groups=32)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU()
        (3): conv_squash(num_shared=32)
      )
      (critic): Sequential(
        (0): Conv2d (64, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU()
        (3): Conv2d (16, 1, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU()
      )
    )
    (module3_ot_loss): OptTrans(
      (G_net): Sequential(
        (0): ConvTranspose2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU()
        (3): conv_squash(num_shared=32)
      )
      (critic): Sequential(
        (0): Conv2d (256, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU()
        (3): Conv2d (64, 1, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU()
      )
    )
    (module4_ot_loss): OptTrans(
      (G_net): Sequential(
        (0): ConvTranspose2d (512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1), groups=32)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU()
        (3): conv_squash(num_shared=32)
      )
      (critic): Sequential(
        (0): Conv2d (256, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
        (2): ReLU()
        (3): Conv2d (64, 1, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True)
        (5): ReLU()
      )
    )
  ), weights=((32, 3, 3, 3), (32,), (32,), (32,), (64, 1, 3, 3), (64,), (64,), (64,), (64, 32, 7, 7), (64,), (64,), (64,), (32, 2, 3, 3), (32,), (32, 2, 3, 3), (32,), (64,), (64,), (64, 32, 3, 3), (64,), (64, 2, 1, 1), (64,), (64,), (64,), (64, 64, 5, 5), (64,), (64,), (64,), (32, 2, 3, 3), (32,), (32, 2, 3, 3), (32,), (64,), (64,), (64, 2, 1, 1), (64,), (64,), (64,), (64, 64, 5, 5), (64,), (64,), (64,), (32, 2, 3, 3), (32,), (32, 2, 3, 3), (32,), (64,), (64,), (64, 2, 1, 1), (64,), (64,), (64,), (64, 64, 5, 5), (64,), (64,), (64,), (32, 2, 3, 3), (32,), (32, 2, 3, 3), (32,), (64,), (64,), (128, 2, 3, 3), (128,), (128,), (128,), (128, 64, 7, 7), (128,), (128,), (128,), (32, 4, 3, 3), (32,), (32, 4, 3, 3), (32,), (128,), (128,), (128, 64, 3, 3), (128,), (128, 4, 1, 1), (128,), (128,), (128,), (128, 128, 5, 5), (128,), (128,), (128,), (32, 4, 3, 3), (32,), (32, 4, 3, 3), (32,), (128,), (128,), (128, 4, 1, 1), (128,), (128,), (128,), (128, 128, 5, 5), (128,), (128,), (128,), (32, 4, 3, 3), (32,), (32, 4, 3, 3), (32,), (128,), (128,), (128, 4, 1, 1), (128,), (128,), (128,), (128, 128, 5, 5), (128,), (128,), (128,), (32, 4, 3, 3), (32,), (32, 4, 3, 3), (32,), (128,), (128,), (256, 4, 3, 3), (256,), (256,), (256,), (256, 128, 7, 7), (256,), (256,), (256,), (32, 8, 3, 3), (32,), (32, 8, 3, 3), (32,), (256,), (256,), (256, 128, 3, 3), (256,), (256, 8, 1, 1), (256,), (256,), (256,), (256, 256, 5, 5), (256,), (256,), (256,), (32, 8, 3, 3), (32,), (32, 8, 3, 3), (32,), (256,), (256,), (256, 8, 1, 1), (256,), (256,), (256,), (256, 256, 5, 5), (256,), (256,), (256,), (32, 8, 3, 3), (32,), (32, 8, 3, 3), (32,), (256,), (256,), (256, 8, 1, 1), (256,), (256,), (256,), (256, 256, 5, 5), (256,), (256,), (256,), (32, 8, 3, 3), (32,), (32, 8, 3, 3), (32,), (256,), (256,), (512, 8, 3, 3), (512,), (512,), (512,), (512, 256, 7, 7), (512,), (512,), (512,), (32, 16, 3, 3), (32,), (32, 16, 3, 3), (32,), (512,), (512,), (512, 256, 3, 3), (512,), (512, 16, 1, 1), (512,), (512,), (512,), (512, 512, 5, 5), (512,), (512,), (512,), (32, 16, 3, 3), (32,), (32, 16, 3, 3), (32,), (512,), (512,), (512, 16, 1, 1), (512,), (512,), (512,), (512, 512, 5, 5), (512,), (512,), (512,), (32, 16, 3, 3), (32,), (32, 16, 3, 3), (32,), (512,), (512,), (512, 16, 1, 1), (512,), (512,), (512,), (512, 512, 5, 5), (512,), (512,), (512,), (32, 16, 3, 3), (32,), (32, 16, 3, 3), (32,), (512,), (512,), (16, 512, 10), (64, 2, 3, 3), (64,), (64,), (64,), (16, 64, 3, 3), (16,), (16,), (16,), (1, 16, 3, 3), (1,), (1,), (1,), (128, 2, 3, 3), (64,), (64,), (64,), (16, 64, 3, 3), (16,), (16,), (16,), (1, 16, 3, 3), (1,), (1,), (1,), (256, 8, 3, 3), (256,), (256,), (256,), (64, 256, 3, 3), (64,), (64,), (64,), (1, 64, 3, 3), (1,), (1,), (1,), (512, 8, 3, 3), (256,), (256,), (256,), (64, 256, 3, 3), (64,), (64,), (64,), (1, 64, 3, 3), (1,), (1,), (1,)), parameters=36850892
)
Total param num # 140.574997 Mb

init learning rate 0.0001000000 at iter 0

[cap_102_OT_v6_1_4gpu]	epoch/iter [0/600][0/391] ||	Loss: 36.1510, Top1_err: 86.7188, Top5_err: 55.4688 ||	Data/batch time: 0.1137/19.9519
[cap_102_OT_v6_1_4gpu]	epoch/iter [0/600][100/391] ||	Loss: 12.4357, Top1_err: 84.8855, Top5_err: 39.8979 ||	Data/batch time: 0.0017/1.1714
[cap_102_OT_v6_1_4gpu]	epoch/iter [0/600][200/391] ||	Loss: 9.1402, Top1_err: 82.6415, Top5_err: 36.5205 ||	Data/batch time: 0.0011/1.0727
[cap_102_OT_v6_1_4gpu]	epoch/iter [0/600][300/391] ||	Loss: 7.5150, Top1_err: 81.0060, Top5_err: 33.8507 ||	Data/batch time: 0.0009/1.0399
[cap_102_OT_v6_1_4gpu]	epoch/iter [0/600][390/391] ||	Loss: 6.5248, Top1_err: 79.5480, Top5_err: 31.9080 ||	Data/batch time: 0.0008/1.0380
Summary	epoch/iter [0/600] ||	TRAIN, Top1_err: 79.5480, Top5_err: 31.9080 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

model saved at result/cap_102_OT_v6_1_4gpu/epoch_1.pth
[cap_102_OT_v6_1_4gpu]	epoch/iter [1/600][0/391] ||	Loss: 2.6142, Top1_err: 66.4062, Top5_err: 21.8750 ||	Data/batch time: 0.2836/2.8452
[cap_102_OT_v6_1_4gpu]	epoch/iter [1/600][100/391] ||	Loss: 2.4645, Top1_err: 73.0662, Top5_err: 23.8939 ||	Data/batch time: 0.0033/0.9951
[cap_102_OT_v6_1_4gpu]	epoch/iter [1/600][200/391] ||	Loss: 2.2057, Top1_err: 72.4580, Top5_err: 22.9789 ||	Data/batch time: 0.0019/0.9837
[cap_102_OT_v6_1_4gpu]	epoch/iter [1/600][300/391] ||	Loss: 2.0045, Top1_err: 72.0645, Top5_err: 22.4927 ||	Data/batch time: 0.0014/0.9790
[cap_102_OT_v6_1_4gpu]	epoch/iter [1/600][390/391] ||	Loss: 1.8608, Top1_err: 71.6120, Top5_err: 22.0220 ||	Data/batch time: 0.0012/0.9770
Summary	epoch/iter [1/600] ||	TRAIN, Top1_err: 71.6120, Top5_err: 22.0220 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [2/600][0/391] ||	Loss: 1.3319, Top1_err: 71.8750, Top5_err: 18.7500 ||	Data/batch time: 0.2696/1.2008
[cap_102_OT_v6_1_4gpu]	epoch/iter [2/600][100/391] ||	Loss: 1.2016, Top1_err: 68.2472, Top5_err: 19.8020 ||	Data/batch time: 0.0031/0.9774
[cap_102_OT_v6_1_4gpu]	epoch/iter [2/600][200/391] ||	Loss: 1.1422, Top1_err: 68.2952, Top5_err: 19.4263 ||	Data/batch time: 0.0018/0.9724
[cap_102_OT_v6_1_4gpu]	epoch/iter [2/600][300/391] ||	Loss: 1.0879, Top1_err: 68.3010, Top5_err: 19.3522 ||	Data/batch time: 0.0014/0.9727
[cap_102_OT_v6_1_4gpu]	epoch/iter [2/600][390/391] ||	Loss: 1.0465, Top1_err: 67.9900, Top5_err: 19.0060 ||	Data/batch time: 0.0011/0.9715
Summary	epoch/iter [2/600] ||	TRAIN, Top1_err: 67.9900, Top5_err: 19.0060 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [3/600][0/391] ||	Loss: 0.8807, Top1_err: 67.1875, Top5_err: 15.6250 ||	Data/batch time: 0.2877/1.3171
[cap_102_OT_v6_1_4gpu]	epoch/iter [3/600][100/391] ||	Loss: 0.8375, Top1_err: 66.9554, Top5_err: 17.6361 ||	Data/batch time: 0.0033/0.9730
[cap_102_OT_v6_1_4gpu]	epoch/iter [3/600][200/391] ||	Loss: 0.8109, Top1_err: 66.8183, Top5_err: 17.9571 ||	Data/batch time: 0.0019/0.9723
[cap_102_OT_v6_1_4gpu]	epoch/iter [3/600][300/391] ||	Loss: 0.7897, Top1_err: 66.6191, Top5_err: 17.8961 ||	Data/batch time: 0.0014/0.9712
[cap_102_OT_v6_1_4gpu]	epoch/iter [3/600][390/391] ||	Loss: 0.7718, Top1_err: 66.5380, Top5_err: 17.8180 ||	Data/batch time: 0.0012/0.9707
Summary	epoch/iter [3/600] ||	TRAIN, Top1_err: 66.5380, Top5_err: 17.8180 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [4/600][0/391] ||	Loss: 0.6761, Top1_err: 57.8125, Top5_err: 12.5000 ||	Data/batch time: 0.2397/1.2364
[cap_102_OT_v6_1_4gpu]	epoch/iter [4/600][100/391] ||	Loss: 0.6739, Top1_err: 64.4106, Top5_err: 16.3212 ||	Data/batch time: 0.0028/0.9727
[cap_102_OT_v6_1_4gpu]	epoch/iter [4/600][200/391] ||	Loss: 0.6628, Top1_err: 64.4123, Top5_err: 16.4179 ||	Data/batch time: 0.0016/0.9728
[cap_102_OT_v6_1_4gpu]	epoch/iter [4/600][300/391] ||	Loss: 0.6520, Top1_err: 64.4103, Top5_err: 16.2869 ||	Data/batch time: 0.0012/0.9729
[cap_102_OT_v6_1_4gpu]	epoch/iter [4/600][390/391] ||	Loss: 0.6423, Top1_err: 64.3720, Top5_err: 16.1440 ||	Data/batch time: 0.0011/0.9721
Summary	epoch/iter [4/600] ||	TRAIN, Top1_err: 64.3720, Top5_err: 16.1440 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [5/600][0/391] ||	Loss: 0.6494, Top1_err: 62.5000, Top5_err: 17.1875 ||	Data/batch time: 0.2749/1.2072
[cap_102_OT_v6_1_4gpu]	epoch/iter [5/600][100/391] ||	Loss: 0.5954, Top1_err: 63.8459, Top5_err: 15.8338 ||	Data/batch time: 0.0032/0.9799
[cap_102_OT_v6_1_4gpu]	epoch/iter [5/600][200/391] ||	Loss: 0.5877, Top1_err: 63.6583, Top5_err: 15.5745 ||	Data/batch time: 0.0018/0.9768
[cap_102_OT_v6_1_4gpu]	epoch/iter [5/600][300/391] ||	Loss: 0.5796, Top1_err: 63.5382, Top5_err: 15.3654 ||	Data/batch time: 0.0014/0.9769
[cap_102_OT_v6_1_4gpu]	epoch/iter [5/600][390/391] ||	Loss: 0.5730, Top1_err: 63.1880, Top5_err: 15.1780 ||	Data/batch time: 0.0012/0.9749
Summary	epoch/iter [5/600] ||	TRAIN, Top1_err: 63.1880, Top5_err: 15.1780 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [6/600][0/391] ||	Loss: 0.5179, Top1_err: 57.8125, Top5_err: 11.7188 ||	Data/batch time: 0.2703/1.2542
[cap_102_OT_v6_1_4gpu]	epoch/iter [6/600][100/391] ||	Loss: 0.5412, Top1_err: 62.8481, Top5_err: 14.6504 ||	Data/batch time: 0.0032/0.9809
[cap_102_OT_v6_1_4gpu]	epoch/iter [6/600][200/391] ||	Loss: 0.5348, Top1_err: 62.1113, Top5_err: 14.3307 ||	Data/batch time: 0.0018/0.9766
[cap_102_OT_v6_1_4gpu]	epoch/iter [6/600][300/391] ||	Loss: 0.5310, Top1_err: 62.1859, Top5_err: 14.2053 ||	Data/batch time: 0.0014/0.9760
[cap_102_OT_v6_1_4gpu]	epoch/iter [6/600][390/391] ||	Loss: 0.5269, Top1_err: 62.0580, Top5_err: 14.2160 ||	Data/batch time: 0.0012/0.9743
Summary	epoch/iter [6/600] ||	TRAIN, Top1_err: 62.0580, Top5_err: 14.2160 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [7/600][0/391] ||	Loss: 0.5147, Top1_err: 65.6250, Top5_err: 9.3750 ||	Data/batch time: 0.2423/1.2385
[cap_102_OT_v6_1_4gpu]	epoch/iter [7/600][100/391] ||	Loss: 0.5010, Top1_err: 60.9066, Top5_err: 13.4978 ||	Data/batch time: 0.0029/0.9763
[cap_102_OT_v6_1_4gpu]	epoch/iter [7/600][200/391] ||	Loss: 0.4998, Top1_err: 60.9997, Top5_err: 13.6233 ||	Data/batch time: 0.0017/0.9750
[cap_102_OT_v6_1_4gpu]	epoch/iter [7/600][300/391] ||	Loss: 0.4963, Top1_err: 61.0854, Top5_err: 13.5642 ||	Data/batch time: 0.0013/0.9751
[cap_102_OT_v6_1_4gpu]	epoch/iter [7/600][390/391] ||	Loss: 0.4922, Top1_err: 60.7440, Top5_err: 13.4640 ||	Data/batch time: 0.0011/0.9747
Summary	epoch/iter [7/600] ||	TRAIN, Top1_err: 60.7440, Top5_err: 13.4640 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [8/600][0/391] ||	Loss: 0.4846, Top1_err: 53.9062, Top5_err: 14.8438 ||	Data/batch time: 0.2316/1.1883
[cap_102_OT_v6_1_4gpu]	epoch/iter [8/600][100/391] ||	Loss: 0.4761, Top1_err: 60.2955, Top5_err: 12.7166 ||	Data/batch time: 0.0028/0.9748
[cap_102_OT_v6_1_4gpu]	epoch/iter [8/600][200/391] ||	Loss: 0.4720, Top1_err: 59.8064, Top5_err: 12.4806 ||	Data/batch time: 0.0016/0.9728
[cap_102_OT_v6_1_4gpu]	epoch/iter [8/600][300/391] ||	Loss: 0.4690, Top1_err: 59.9071, Top5_err: 12.4533 ||	Data/batch time: 0.0012/0.9729
[cap_102_OT_v6_1_4gpu]	epoch/iter [8/600][390/391] ||	Loss: 0.4667, Top1_err: 59.7520, Top5_err: 12.4820 ||	Data/batch time: 0.0010/0.9733
Summary	epoch/iter [8/600] ||	TRAIN, Top1_err: 59.7520, Top5_err: 12.4820 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [9/600][0/391] ||	Loss: 0.4631, Top1_err: 64.0625, Top5_err: 11.7188 ||	Data/batch time: 0.3029/1.3424
[cap_102_OT_v6_1_4gpu]	epoch/iter [9/600][100/391] ||	Loss: 0.4534, Top1_err: 59.5142, Top5_err: 12.0668 ||	Data/batch time: 0.0035/0.9739
[cap_102_OT_v6_1_4gpu]	epoch/iter [9/600][200/391] ||	Loss: 0.4523, Top1_err: 59.1457, Top5_err: 12.0569 ||	Data/batch time: 0.0020/0.9729
[cap_102_OT_v6_1_4gpu]	epoch/iter [9/600][300/391] ||	Loss: 0.4491, Top1_err: 58.7625, Top5_err: 11.8926 ||	Data/batch time: 0.0015/0.9682
[cap_102_OT_v6_1_4gpu]	epoch/iter [9/600][390/391] ||	Loss: 0.4469, Top1_err: 58.6340, Top5_err: 11.8820 ||	Data/batch time: 0.0012/0.9681
Summary	epoch/iter [9/600] ||	TRAIN, Top1_err: 58.6340, Top5_err: 11.8820 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [10/600][0/391] ||	Loss: 0.4740, Top1_err: 64.0625, Top5_err: 14.8438 ||	Data/batch time: 0.3157/1.3080
[cap_102_OT_v6_1_4gpu]	epoch/iter [10/600][100/391] ||	Loss: 0.4348, Top1_err: 57.5650, Top5_err: 11.4712 ||	Data/batch time: 0.0036/0.9756
[cap_102_OT_v6_1_4gpu]	epoch/iter [10/600][200/391] ||	Loss: 0.4326, Top1_err: 57.5715, Top5_err: 11.2990 ||	Data/batch time: 0.0020/0.9747
[cap_102_OT_v6_1_4gpu]	epoch/iter [10/600][300/391] ||	Loss: 0.4318, Top1_err: 57.5218, Top5_err: 11.2801 ||	Data/batch time: 0.0015/0.9725
[cap_102_OT_v6_1_4gpu]	epoch/iter [10/600][390/391] ||	Loss: 0.4299, Top1_err: 57.3180, Top5_err: 11.2540 ||	Data/batch time: 0.0013/0.9727
Summary	epoch/iter [10/600] ||	TRAIN, Top1_err: 57.3180, Top5_err: 11.2540 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [11/600][0/391] ||	Loss: 0.3809, Top1_err: 51.5625, Top5_err: 8.5938 ||	Data/batch time: 0.2540/1.1962
[cap_102_OT_v6_1_4gpu]	epoch/iter [11/600][100/391] ||	Loss: 0.4167, Top1_err: 56.4821, Top5_err: 10.5585 ||	Data/batch time: 0.0030/0.9724
[cap_102_OT_v6_1_4gpu]	epoch/iter [11/600][200/391] ||	Loss: 0.4167, Top1_err: 56.4560, Top5_err: 10.8637 ||	Data/batch time: 0.0017/0.9737
[cap_102_OT_v6_1_4gpu]	epoch/iter [11/600][300/391] ||	Loss: 0.4154, Top1_err: 56.4421, Top5_err: 10.7299 ||	Data/batch time: 0.0013/0.9729
[cap_102_OT_v6_1_4gpu]	epoch/iter [11/600][390/391] ||	Loss: 0.4151, Top1_err: 56.5620, Top5_err: 10.7340 ||	Data/batch time: 0.0011/0.9725
Summary	epoch/iter [11/600] ||	TRAIN, Top1_err: 56.5620, Top5_err: 10.7340 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [12/600][0/391] ||	Loss: 0.3768, Top1_err: 50.0000, Top5_err: 6.2500 ||	Data/batch time: 0.2788/1.2819
[cap_102_OT_v6_1_4gpu]	epoch/iter [12/600][100/391] ||	Loss: 0.4055, Top1_err: 55.3450, Top5_err: 10.1717 ||	Data/batch time: 0.0032/0.9770
[cap_102_OT_v6_1_4gpu]	epoch/iter [12/600][200/391] ||	Loss: 0.4035, Top1_err: 55.2938, Top5_err: 10.1368 ||	Data/batch time: 0.0019/0.9757
[cap_102_OT_v6_1_4gpu]	epoch/iter [12/600][300/391] ||	Loss: 0.4026, Top1_err: 55.3182, Top5_err: 10.0888 ||	Data/batch time: 0.0014/0.9741
[cap_102_OT_v6_1_4gpu]	epoch/iter [12/600][390/391] ||	Loss: 0.4021, Top1_err: 55.3500, Top5_err: 9.9480 ||	Data/batch time: 0.0012/0.9736
Summary	epoch/iter [12/600] ||	TRAIN, Top1_err: 55.3500, Top5_err: 9.9480 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [13/600][0/391] ||	Loss: 0.3846, Top1_err: 50.0000, Top5_err: 11.7188 ||	Data/batch time: 0.2460/1.2463
[cap_102_OT_v6_1_4gpu]	epoch/iter [13/600][100/391] ||	Loss: 0.3934, Top1_err: 54.8422, Top5_err: 9.4988 ||	Data/batch time: 0.0029/0.9744
[cap_102_OT_v6_1_4gpu]	epoch/iter [13/600][200/391] ||	Loss: 0.3924, Top1_err: 54.5981, Top5_err: 9.4566 ||	Data/batch time: 0.0017/0.9673
[cap_102_OT_v6_1_4gpu]	epoch/iter [13/600][300/391] ||	Loss: 0.3915, Top1_err: 54.3838, Top5_err: 9.4944 ||	Data/batch time: 0.0013/0.9588
[cap_102_OT_v6_1_4gpu]	epoch/iter [13/600][390/391] ||	Loss: 0.3898, Top1_err: 54.2380, Top5_err: 9.3860 ||	Data/batch time: 0.0011/0.9546
Summary	epoch/iter [13/600] ||	TRAIN, Top1_err: 54.2380, Top5_err: 9.3860 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [14/600][0/391] ||	Loss: 0.3787, Top1_err: 53.9062, Top5_err: 9.3750 ||	Data/batch time: 0.2403/1.1898
[cap_102_OT_v6_1_4gpu]	epoch/iter [14/600][100/391] ||	Loss: 0.3822, Top1_err: 53.1405, Top5_err: 8.9418 ||	Data/batch time: 0.0029/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [14/600][200/391] ||	Loss: 0.3816, Top1_err: 53.4204, Top5_err: 8.9785 ||	Data/batch time: 0.0017/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [14/600][300/391] ||	Loss: 0.3808, Top1_err: 53.3794, Top5_err: 9.0428 ||	Data/batch time: 0.0013/0.9435
[cap_102_OT_v6_1_4gpu]	epoch/iter [14/600][390/391] ||	Loss: 0.3802, Top1_err: 53.3460, Top5_err: 9.0860 ||	Data/batch time: 0.0011/0.9433
Summary	epoch/iter [14/600] ||	TRAIN, Top1_err: 53.3460, Top5_err: 9.0860 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [15/600][0/391] ||	Loss: 0.4033, Top1_err: 61.7188, Top5_err: 9.3750 ||	Data/batch time: 0.2158/1.1665
[cap_102_OT_v6_1_4gpu]	epoch/iter [15/600][100/391] ||	Loss: 0.3729, Top1_err: 52.4366, Top5_err: 8.1915 ||	Data/batch time: 0.0026/0.9414
[cap_102_OT_v6_1_4gpu]	epoch/iter [15/600][200/391] ||	Loss: 0.3707, Top1_err: 52.3632, Top5_err: 8.3450 ||	Data/batch time: 0.0015/0.9402
[cap_102_OT_v6_1_4gpu]	epoch/iter [15/600][300/391] ||	Loss: 0.3700, Top1_err: 52.2737, Top5_err: 8.4536 ||	Data/batch time: 0.0012/0.9405
[cap_102_OT_v6_1_4gpu]	epoch/iter [15/600][390/391] ||	Loss: 0.3691, Top1_err: 52.1760, Top5_err: 8.3620 ||	Data/batch time: 0.0010/0.9398
Summary	epoch/iter [15/600] ||	TRAIN, Top1_err: 52.1760, Top5_err: 8.3620 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [16/600][0/391] ||	Loss: 0.3547, Top1_err: 46.0938, Top5_err: 3.1250 ||	Data/batch time: 0.2036/1.1277
[cap_102_OT_v6_1_4gpu]	epoch/iter [16/600][100/391] ||	Loss: 0.3617, Top1_err: 51.0907, Top5_err: 8.3617 ||	Data/batch time: 0.0025/0.9413
[cap_102_OT_v6_1_4gpu]	epoch/iter [16/600][200/391] ||	Loss: 0.3615, Top1_err: 51.2865, Top5_err: 8.1312 ||	Data/batch time: 0.0015/0.9426
[cap_102_OT_v6_1_4gpu]	epoch/iter [16/600][300/391] ||	Loss: 0.3609, Top1_err: 51.1031, Top5_err: 8.1447 ||	Data/batch time: 0.0011/0.9425
[cap_102_OT_v6_1_4gpu]	epoch/iter [16/600][390/391] ||	Loss: 0.3605, Top1_err: 51.0960, Top5_err: 8.1520 ||	Data/batch time: 0.0010/0.9422
Summary	epoch/iter [16/600] ||	TRAIN, Top1_err: 51.0960, Top5_err: 8.1520 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [17/600][0/391] ||	Loss: 0.3587, Top1_err: 47.6562, Top5_err: 8.5938 ||	Data/batch time: 0.2304/1.1624
[cap_102_OT_v6_1_4gpu]	epoch/iter [17/600][100/391] ||	Loss: 0.3527, Top1_err: 50.2166, Top5_err: 7.1782 ||	Data/batch time: 0.0028/0.9451
[cap_102_OT_v6_1_4gpu]	epoch/iter [17/600][200/391] ||	Loss: 0.3524, Top1_err: 50.0194, Top5_err: 7.3655 ||	Data/batch time: 0.0016/0.9439
[cap_102_OT_v6_1_4gpu]	epoch/iter [17/600][300/391] ||	Loss: 0.3529, Top1_err: 50.1038, Top5_err: 7.4569 ||	Data/batch time: 0.0012/0.9433
[cap_102_OT_v6_1_4gpu]	epoch/iter [17/600][390/391] ||	Loss: 0.3517, Top1_err: 49.9080, Top5_err: 7.4660 ||	Data/batch time: 0.0011/0.9423
Summary	epoch/iter [17/600] ||	TRAIN, Top1_err: 49.9080, Top5_err: 7.4660 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [18/600][0/391] ||	Loss: 0.3371, Top1_err: 48.4375, Top5_err: 10.1562 ||	Data/batch time: 0.2326/1.2364
[cap_102_OT_v6_1_4gpu]	epoch/iter [18/600][100/391] ||	Loss: 0.3431, Top1_err: 48.9016, Top5_err: 7.2556 ||	Data/batch time: 0.0027/0.9429
[cap_102_OT_v6_1_4gpu]	epoch/iter [18/600][200/391] ||	Loss: 0.3439, Top1_err: 48.9311, Top5_err: 7.2800 ||	Data/batch time: 0.0016/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [18/600][300/391] ||	Loss: 0.3434, Top1_err: 48.8917, Top5_err: 7.2519 ||	Data/batch time: 0.0012/0.9432
[cap_102_OT_v6_1_4gpu]	epoch/iter [18/600][390/391] ||	Loss: 0.3432, Top1_err: 48.9980, Top5_err: 7.2080 ||	Data/batch time: 0.0010/0.9430
Summary	epoch/iter [18/600] ||	TRAIN, Top1_err: 48.9980, Top5_err: 7.2080 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [19/600][0/391] ||	Loss: 0.3329, Top1_err: 46.0938, Top5_err: 7.8125 ||	Data/batch time: 0.2401/1.2383
[cap_102_OT_v6_1_4gpu]	epoch/iter [19/600][100/391] ||	Loss: 0.3376, Top1_err: 48.4452, Top5_err: 6.5594 ||	Data/batch time: 0.0029/0.9473
[cap_102_OT_v6_1_4gpu]	epoch/iter [19/600][200/391] ||	Loss: 0.3370, Top1_err: 48.2898, Top5_err: 6.6970 ||	Data/batch time: 0.0017/0.9442
[cap_102_OT_v6_1_4gpu]	epoch/iter [19/600][300/391] ||	Loss: 0.3356, Top1_err: 48.0871, Top5_err: 6.6497 ||	Data/batch time: 0.0013/0.9440
[cap_102_OT_v6_1_4gpu]	epoch/iter [19/600][390/391] ||	Loss: 0.3358, Top1_err: 48.0400, Top5_err: 6.7600 ||	Data/batch time: 0.0011/0.9430
Summary	epoch/iter [19/600] ||	TRAIN, Top1_err: 48.0400, Top5_err: 6.7600 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [20/600][0/391] ||	Loss: 0.3439, Top1_err: 51.5625, Top5_err: 7.0312 ||	Data/batch time: 0.2140/1.1760
[cap_102_OT_v6_1_4gpu]	epoch/iter [20/600][100/391] ||	Loss: 0.3312, Top1_err: 47.5248, Top5_err: 6.4898 ||	Data/batch time: 0.0026/0.9407
[cap_102_OT_v6_1_4gpu]	epoch/iter [20/600][200/391] ||	Loss: 0.3288, Top1_err: 46.9916, Top5_err: 6.6192 ||	Data/batch time: 0.0015/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [20/600][300/391] ||	Loss: 0.3280, Top1_err: 46.9399, Top5_err: 6.6263 ||	Data/batch time: 0.0012/0.9426
[cap_102_OT_v6_1_4gpu]	epoch/iter [20/600][390/391] ||	Loss: 0.3275, Top1_err: 46.7600, Top5_err: 6.5640 ||	Data/batch time: 0.0010/0.9417
Summary	epoch/iter [20/600] ||	TRAIN, Top1_err: 46.7600, Top5_err: 6.5640 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [21/600][0/391] ||	Loss: 0.3254, Top1_err: 49.2188, Top5_err: 4.6875 ||	Data/batch time: 0.2344/1.2463
[cap_102_OT_v6_1_4gpu]	epoch/iter [21/600][100/391] ||	Loss: 0.3230, Top1_err: 46.5965, Top5_err: 6.1881 ||	Data/batch time: 0.0028/0.9451
[cap_102_OT_v6_1_4gpu]	epoch/iter [21/600][200/391] ||	Loss: 0.3215, Top1_err: 46.4552, Top5_err: 6.0557 ||	Data/batch time: 0.0016/0.9417
[cap_102_OT_v6_1_4gpu]	epoch/iter [21/600][300/391] ||	Loss: 0.3209, Top1_err: 46.2002, Top5_err: 6.0008 ||	Data/batch time: 0.0012/0.9418
[cap_102_OT_v6_1_4gpu]	epoch/iter [21/600][390/391] ||	Loss: 0.3196, Top1_err: 45.9900, Top5_err: 6.0140 ||	Data/batch time: 0.0011/0.9416
Summary	epoch/iter [21/600] ||	TRAIN, Top1_err: 45.9900, Top5_err: 6.0140 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [22/600][0/391] ||	Loss: 0.3057, Top1_err: 41.4062, Top5_err: 7.0312 ||	Data/batch time: 0.2154/1.1730
[cap_102_OT_v6_1_4gpu]	epoch/iter [22/600][100/391] ||	Loss: 0.3142, Top1_err: 45.0727, Top5_err: 5.5616 ||	Data/batch time: 0.0026/0.9417
[cap_102_OT_v6_1_4gpu]	epoch/iter [22/600][200/391] ||	Loss: 0.3116, Top1_err: 44.6984, Top5_err: 5.5504 ||	Data/batch time: 0.0015/0.9430
[cap_102_OT_v6_1_4gpu]	epoch/iter [22/600][300/391] ||	Loss: 0.3112, Top1_err: 44.7026, Top5_err: 5.5440 ||	Data/batch time: 0.0012/0.9424
[cap_102_OT_v6_1_4gpu]	epoch/iter [22/600][390/391] ||	Loss: 0.3103, Top1_err: 44.6480, Top5_err: 5.5300 ||	Data/batch time: 0.0010/0.9418
Summary	epoch/iter [22/600] ||	TRAIN, Top1_err: 44.6480, Top5_err: 5.5300 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [23/600][0/391] ||	Loss: 0.2901, Top1_err: 42.1875, Top5_err: 7.8125 ||	Data/batch time: 0.2174/1.1722
[cap_102_OT_v6_1_4gpu]	epoch/iter [23/600][100/391] ||	Loss: 0.3057, Top1_err: 43.9279, Top5_err: 5.4301 ||	Data/batch time: 0.0026/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [23/600][200/391] ||	Loss: 0.3032, Top1_err: 43.3808, Top5_err: 5.1850 ||	Data/batch time: 0.0015/0.9423
[cap_102_OT_v6_1_4gpu]	epoch/iter [23/600][300/391] ||	Loss: 0.3030, Top1_err: 43.4333, Top5_err: 5.3338 ||	Data/batch time: 0.0012/0.9415
[cap_102_OT_v6_1_4gpu]	epoch/iter [23/600][390/391] ||	Loss: 0.3024, Top1_err: 43.3620, Top5_err: 5.3080 ||	Data/batch time: 0.0010/0.9407
Summary	epoch/iter [23/600] ||	TRAIN, Top1_err: 43.3620, Top5_err: 5.3080 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [24/600][0/391] ||	Loss: 0.3239, Top1_err: 48.4375, Top5_err: 7.8125 ||	Data/batch time: 0.2354/1.1740
[cap_102_OT_v6_1_4gpu]	epoch/iter [24/600][100/391] ||	Loss: 0.2972, Top1_err: 42.2803, Top5_err: 5.2676 ||	Data/batch time: 0.0028/0.9426
[cap_102_OT_v6_1_4gpu]	epoch/iter [24/600][200/391] ||	Loss: 0.2951, Top1_err: 42.2225, Top5_err: 4.9829 ||	Data/batch time: 0.0017/0.9422
[cap_102_OT_v6_1_4gpu]	epoch/iter [24/600][300/391] ||	Loss: 0.2958, Top1_err: 42.4211, Top5_err: 5.0664 ||	Data/batch time: 0.0013/0.9406
[cap_102_OT_v6_1_4gpu]	epoch/iter [24/600][390/391] ||	Loss: 0.2943, Top1_err: 42.2020, Top5_err: 4.9760 ||	Data/batch time: 0.0011/0.9397
Summary	epoch/iter [24/600] ||	TRAIN, Top1_err: 42.2020, Top5_err: 4.9760 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

model saved at result/cap_102_OT_v6_1_4gpu/epoch_25.pth
[cap_102_OT_v6_1_4gpu]	epoch/iter [25/600][0/391] ||	Loss: 0.2820, Top1_err: 42.9688, Top5_err: 3.9062 ||	Data/batch time: 0.2118/1.1765
[cap_102_OT_v6_1_4gpu]	epoch/iter [25/600][100/391] ||	Loss: 0.2829, Top1_err: 40.7952, Top5_err: 4.2311 ||	Data/batch time: 0.0026/0.9414
[cap_102_OT_v6_1_4gpu]	epoch/iter [25/600][200/391] ||	Loss: 0.2831, Top1_err: 40.6133, Top5_err: 4.5359 ||	Data/batch time: 0.0015/0.9402
[cap_102_OT_v6_1_4gpu]	epoch/iter [25/600][300/391] ||	Loss: 0.2846, Top1_err: 40.9520, Top5_err: 4.6174 ||	Data/batch time: 0.0012/0.9399
[cap_102_OT_v6_1_4gpu]	epoch/iter [25/600][390/391] ||	Loss: 0.2841, Top1_err: 40.9300, Top5_err: 4.6140 ||	Data/batch time: 0.0010/0.9399
Summary	epoch/iter [25/600] ||	TRAIN, Top1_err: 40.9300, Top5_err: 4.6140 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [26/600][0/391] ||	Loss: 0.2725, Top1_err: 38.2812, Top5_err: 3.9062 ||	Data/batch time: 0.2584/1.1901
[cap_102_OT_v6_1_4gpu]	epoch/iter [26/600][100/391] ||	Loss: 0.2779, Top1_err: 39.7432, Top5_err: 4.5096 ||	Data/batch time: 0.0030/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [26/600][200/391] ||	Loss: 0.2771, Top1_err: 39.9876, Top5_err: 4.2094 ||	Data/batch time: 0.0018/0.9435
[cap_102_OT_v6_1_4gpu]	epoch/iter [26/600][300/391] ||	Loss: 0.2767, Top1_err: 39.7321, Top5_err: 4.4435 ||	Data/batch time: 0.0013/0.9424
[cap_102_OT_v6_1_4gpu]	epoch/iter [26/600][390/391] ||	Loss: 0.2772, Top1_err: 39.8460, Top5_err: 4.4340 ||	Data/batch time: 0.0011/0.9409
Summary	epoch/iter [26/600] ||	TRAIN, Top1_err: 39.8460, Top5_err: 4.4340 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [27/600][0/391] ||	Loss: 0.2690, Top1_err: 38.2812, Top5_err: 4.6875 ||	Data/batch time: 0.2409/1.1843
[cap_102_OT_v6_1_4gpu]	epoch/iter [27/600][100/391] ||	Loss: 0.2709, Top1_err: 39.1089, Top5_err: 4.1615 ||	Data/batch time: 0.0029/0.9417
[cap_102_OT_v6_1_4gpu]	epoch/iter [27/600][200/391] ||	Loss: 0.2682, Top1_err: 38.6699, Top5_err: 4.0578 ||	Data/batch time: 0.0017/0.9398
[cap_102_OT_v6_1_4gpu]	epoch/iter [27/600][300/391] ||	Loss: 0.2675, Top1_err: 38.4837, Top5_err: 4.0490 ||	Data/batch time: 0.0013/0.9390
[cap_102_OT_v6_1_4gpu]	epoch/iter [27/600][390/391] ||	Loss: 0.2671, Top1_err: 38.4200, Top5_err: 4.0620 ||	Data/batch time: 0.0011/0.9391
Summary	epoch/iter [27/600] ||	TRAIN, Top1_err: 38.4200, Top5_err: 4.0620 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [28/600][0/391] ||	Loss: 0.2770, Top1_err: 36.7188, Top5_err: 3.1250 ||	Data/batch time: 0.2590/1.1890
[cap_102_OT_v6_1_4gpu]	epoch/iter [28/600][100/391] ||	Loss: 0.2572, Top1_err: 36.4867, Top5_err: 3.8057 ||	Data/batch time: 0.0030/0.9412
[cap_102_OT_v6_1_4gpu]	epoch/iter [28/600][200/391] ||	Loss: 0.2589, Top1_err: 36.8975, Top5_err: 3.7547 ||	Data/batch time: 0.0018/0.9440
[cap_102_OT_v6_1_4gpu]	epoch/iter [28/600][300/391] ||	Loss: 0.2593, Top1_err: 36.9627, Top5_err: 3.8128 ||	Data/batch time: 0.0013/0.9424
[cap_102_OT_v6_1_4gpu]	epoch/iter [28/600][390/391] ||	Loss: 0.2589, Top1_err: 36.9680, Top5_err: 3.7400 ||	Data/batch time: 0.0011/0.9417
Summary	epoch/iter [28/600] ||	TRAIN, Top1_err: 36.9680, Top5_err: 3.7400 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [29/600][0/391] ||	Loss: 0.2383, Top1_err: 35.9375, Top5_err: 0.7812 ||	Data/batch time: 0.2612/1.2108
[cap_102_OT_v6_1_4gpu]	epoch/iter [29/600][100/391] ||	Loss: 0.2503, Top1_err: 35.5894, Top5_err: 3.4344 ||	Data/batch time: 0.0031/0.9426
[cap_102_OT_v6_1_4gpu]	epoch/iter [29/600][200/391] ||	Loss: 0.2506, Top1_err: 35.6615, Top5_err: 3.4087 ||	Data/batch time: 0.0018/0.9418
[cap_102_OT_v6_1_4gpu]	epoch/iter [29/600][300/391] ||	Loss: 0.2497, Top1_err: 35.4625, Top5_err: 3.3820 ||	Data/batch time: 0.0014/0.9415
[cap_102_OT_v6_1_4gpu]	epoch/iter [29/600][390/391] ||	Loss: 0.2505, Top1_err: 35.6100, Top5_err: 3.4780 ||	Data/batch time: 0.0011/0.9407
Summary	epoch/iter [29/600] ||	TRAIN, Top1_err: 35.6100, Top5_err: 3.4780 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [30/600][0/391] ||	Loss: 0.2553, Top1_err: 35.1562, Top5_err: 1.5625 ||	Data/batch time: 0.2370/1.1486
[cap_102_OT_v6_1_4gpu]	epoch/iter [30/600][100/391] ||	Loss: 0.2426, Top1_err: 34.5838, Top5_err: 2.9394 ||	Data/batch time: 0.0028/0.9413
[cap_102_OT_v6_1_4gpu]	epoch/iter [30/600][200/391] ||	Loss: 0.2436, Top1_err: 34.7831, Top5_err: 2.9967 ||	Data/batch time: 0.0016/0.9432
[cap_102_OT_v6_1_4gpu]	epoch/iter [30/600][300/391] ||	Loss: 0.2431, Top1_err: 34.5930, Top5_err: 3.1302 ||	Data/batch time: 0.0013/0.9417
[cap_102_OT_v6_1_4gpu]	epoch/iter [30/600][390/391] ||	Loss: 0.2424, Top1_err: 34.4380, Top5_err: 3.1480 ||	Data/batch time: 0.0011/0.9411
Summary	epoch/iter [30/600] ||	TRAIN, Top1_err: 34.4380, Top5_err: 3.1480 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [31/600][0/391] ||	Loss: 0.2162, Top1_err: 30.4688, Top5_err: 2.3438 ||	Data/batch time: 0.2242/1.1629
[cap_102_OT_v6_1_4gpu]	epoch/iter [31/600][100/391] ||	Loss: 0.2341, Top1_err: 33.0987, Top5_err: 3.0167 ||	Data/batch time: 0.0027/0.9414
[cap_102_OT_v6_1_4gpu]	epoch/iter [31/600][200/391] ||	Loss: 0.2346, Top1_err: 33.2595, Top5_err: 2.9851 ||	Data/batch time: 0.0016/0.9434
[cap_102_OT_v6_1_4gpu]	epoch/iter [31/600][300/391] ||	Loss: 0.2325, Top1_err: 32.8255, Top5_err: 3.0342 ||	Data/batch time: 0.0012/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [31/600][390/391] ||	Loss: 0.2323, Top1_err: 32.7960, Top5_err: 3.0500 ||	Data/batch time: 0.0010/0.9423
Summary	epoch/iter [31/600] ||	TRAIN, Top1_err: 32.7960, Top5_err: 3.0500 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [32/600][0/391] ||	Loss: 0.2365, Top1_err: 33.5938, Top5_err: 3.1250 ||	Data/batch time: 0.2288/1.1542
[cap_102_OT_v6_1_4gpu]	epoch/iter [32/600][100/391] ||	Loss: 0.2215, Top1_err: 31.1108, Top5_err: 2.5526 ||	Data/batch time: 0.0027/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [32/600][200/391] ||	Loss: 0.2232, Top1_err: 31.3549, Top5_err: 2.6547 ||	Data/batch time: 0.0016/0.9452
[cap_102_OT_v6_1_4gpu]	epoch/iter [32/600][300/391] ||	Loss: 0.2228, Top1_err: 31.1514, Top5_err: 2.6812 ||	Data/batch time: 0.0012/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [32/600][390/391] ||	Loss: 0.2226, Top1_err: 31.1720, Top5_err: 2.6860 ||	Data/batch time: 0.0011/0.9439
Summary	epoch/iter [32/600] ||	TRAIN, Top1_err: 31.1720, Top5_err: 2.6860 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [33/600][0/391] ||	Loss: 0.2008, Top1_err: 28.1250, Top5_err: 3.1250 ||	Data/batch time: 0.2447/1.1974
[cap_102_OT_v6_1_4gpu]	epoch/iter [33/600][100/391] ||	Loss: 0.2082, Top1_err: 28.9759, Top5_err: 2.4056 ||	Data/batch time: 0.0029/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [33/600][200/391] ||	Loss: 0.2109, Top1_err: 29.3183, Top5_err: 2.4021 ||	Data/batch time: 0.0017/0.9434
[cap_102_OT_v6_1_4gpu]	epoch/iter [33/600][300/391] ||	Loss: 0.2113, Top1_err: 29.4487, Top5_err: 2.3775 ||	Data/batch time: 0.0013/0.9432
[cap_102_OT_v6_1_4gpu]	epoch/iter [33/600][390/391] ||	Loss: 0.2123, Top1_err: 29.5840, Top5_err: 2.4260 ||	Data/batch time: 0.0011/0.9419
Summary	epoch/iter [33/600] ||	TRAIN, Top1_err: 29.5840, Top5_err: 2.4260 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [34/600][0/391] ||	Loss: 0.1945, Top1_err: 28.1250, Top5_err: 2.3438 ||	Data/batch time: 0.2118/1.1680
[cap_102_OT_v6_1_4gpu]	epoch/iter [34/600][100/391] ||	Loss: 0.2021, Top1_err: 27.5835, Top5_err: 1.9106 ||	Data/batch time: 0.0026/0.9441
[cap_102_OT_v6_1_4gpu]	epoch/iter [34/600][200/391] ||	Loss: 0.2040, Top1_err: 27.6780, Top5_err: 2.1028 ||	Data/batch time: 0.0016/0.9452
[cap_102_OT_v6_1_4gpu]	epoch/iter [34/600][300/391] ||	Loss: 0.2036, Top1_err: 27.7253, Top5_err: 2.1517 ||	Data/batch time: 0.0012/0.9444
[cap_102_OT_v6_1_4gpu]	epoch/iter [34/600][390/391] ||	Loss: 0.2042, Top1_err: 27.9140, Top5_err: 2.1480 ||	Data/batch time: 0.0010/0.9427
Summary	epoch/iter [34/600] ||	TRAIN, Top1_err: 27.9140, Top5_err: 2.1480 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [35/600][0/391] ||	Loss: 0.1856, Top1_err: 26.5625, Top5_err: 0.7812 ||	Data/batch time: 0.2128/1.1320
[cap_102_OT_v6_1_4gpu]	epoch/iter [35/600][100/391] ||	Loss: 0.1954, Top1_err: 26.5625, Top5_err: 1.7017 ||	Data/batch time: 0.0026/0.9397
[cap_102_OT_v6_1_4gpu]	epoch/iter [35/600][200/391] ||	Loss: 0.1975, Top1_err: 26.6169, Top5_err: 1.8618 ||	Data/batch time: 0.0015/0.9417
[cap_102_OT_v6_1_4gpu]	epoch/iter [35/600][300/391] ||	Loss: 0.2268, Top1_err: 26.5936, Top5_err: 1.8298 ||	Data/batch time: 0.0012/0.9416
[cap_102_OT_v6_1_4gpu]	epoch/iter [35/600][390/391] ||	Loss: 0.2290, Top1_err: 26.6900, Top5_err: 1.8840 ||	Data/batch time: 0.0010/0.9407
Summary	epoch/iter [35/600] ||	TRAIN, Top1_err: 26.6900, Top5_err: 1.8840 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [36/600][0/391] ||	Loss: 0.1474, Top1_err: 21.0938, Top5_err: 0.7812 ||	Data/batch time: 0.2214/1.1431
[cap_102_OT_v6_1_4gpu]	epoch/iter [36/600][100/391] ||	Loss: 0.2260, Top1_err: 24.7061, Top5_err: 1.4310 ||	Data/batch time: 0.0026/0.9430
[cap_102_OT_v6_1_4gpu]	epoch/iter [36/600][200/391] ||	Loss: 0.2392, Top1_err: 24.9650, Top5_err: 1.6325 ||	Data/batch time: 0.0016/0.9443
[cap_102_OT_v6_1_4gpu]	epoch/iter [36/600][300/391] ||	Loss: 0.2368, Top1_err: 25.1531, Top5_err: 1.6897 ||	Data/batch time: 0.0012/0.9421
[cap_102_OT_v6_1_4gpu]	epoch/iter [36/600][390/391] ||	Loss: 0.2301, Top1_err: 25.3660, Top5_err: 1.7320 ||	Data/batch time: 0.0010/0.9413
Summary	epoch/iter [36/600] ||	TRAIN, Top1_err: 25.3660, Top5_err: 1.7320 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [37/600][0/391] ||	Loss: 0.2241, Top1_err: 25.7812, Top5_err: 2.3438 ||	Data/batch time: 0.2229/1.1629
[cap_102_OT_v6_1_4gpu]	epoch/iter [37/600][100/391] ||	Loss: 0.7685, Top1_err: 22.7568, Top5_err: 1.3459 ||	Data/batch time: 0.0027/0.9422
[cap_102_OT_v6_1_4gpu]	epoch/iter [37/600][200/391] ||	Loss: 1.1328, Top1_err: 23.0838, Top5_err: 1.4692 ||	Data/batch time: 0.0016/0.9406
[cap_102_OT_v6_1_4gpu]	epoch/iter [37/600][300/391] ||	Loss: 1.4583, Top1_err: 29.8588, Top5_err: 3.0186 ||	Data/batch time: 0.0012/0.9399
[cap_102_OT_v6_1_4gpu]	epoch/iter [37/600][390/391] ||	Loss: 1.3282, Top1_err: 32.2500, Top5_err: 3.3220 ||	Data/batch time: 0.0010/0.9390
Summary	epoch/iter [37/600] ||	TRAIN, Top1_err: 32.2500, Top5_err: 3.3220 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [38/600][0/391] ||	Loss: 1.5434, Top1_err: 38.2812, Top5_err: 0.0000 ||	Data/batch time: 0.2656/1.2300
[cap_102_OT_v6_1_4gpu]	epoch/iter [38/600][100/391] ||	Loss: 1.1869, Top1_err: 34.2822, Top5_err: 3.5118 ||	Data/batch time: 0.0031/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [38/600][200/391] ||	Loss: 1.5715, Top1_err: 33.6171, Top5_err: 3.3310 ||	Data/batch time: 0.0018/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [38/600][300/391] ||	Loss: 1.6388, Top1_err: 32.5737, Top5_err: 3.0913 ||	Data/batch time: 0.0013/0.9423
[cap_102_OT_v6_1_4gpu]	epoch/iter [38/600][390/391] ||	Loss: 1.6462, Top1_err: 31.9220, Top5_err: 2.9580 ||	Data/batch time: 0.0011/0.9413
Summary	epoch/iter [38/600] ||	TRAIN, Top1_err: 31.9220, Top5_err: 2.9580 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [39/600][0/391] ||	Loss: 1.9072, Top1_err: 28.1250, Top5_err: 3.1250 ||	Data/batch time: 0.2350/1.1714
[cap_102_OT_v6_1_4gpu]	epoch/iter [39/600][100/391] ||	Loss: 1.4872, Top1_err: 26.7559, Top5_err: 1.9415 ||	Data/batch time: 0.0028/0.9429
[cap_102_OT_v6_1_4gpu]	epoch/iter [39/600][200/391] ||	Loss: 1.4425, Top1_err: 27.1883, Top5_err: 1.9706 ||	Data/batch time: 0.0016/0.9407
[cap_102_OT_v6_1_4gpu]	epoch/iter [39/600][300/391] ||	Loss: 1.5405, Top1_err: 27.2737, Top5_err: 1.9856 ||	Data/batch time: 0.0012/0.9405
[cap_102_OT_v6_1_4gpu]	epoch/iter [39/600][390/391] ||	Loss: 1.4947, Top1_err: 27.2340, Top5_err: 2.0080 ||	Data/batch time: 0.0011/0.9402
Summary	epoch/iter [39/600] ||	TRAIN, Top1_err: 27.2340, Top5_err: 2.0080 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [40/600][0/391] ||	Loss: 0.8914, Top1_err: 21.0938, Top5_err: 1.5625 ||	Data/batch time: 0.2191/1.1605
[cap_102_OT_v6_1_4gpu]	epoch/iter [40/600][100/391] ||	Loss: 1.2474, Top1_err: 24.5282, Top5_err: 1.9570 ||	Data/batch time: 0.0026/0.9453
[cap_102_OT_v6_1_4gpu]	epoch/iter [40/600][200/391] ||	Loss: 1.1723, Top1_err: 24.8329, Top5_err: 1.9084 ||	Data/batch time: 0.0015/0.9453
[cap_102_OT_v6_1_4gpu]	epoch/iter [40/600][300/391] ||	Loss: 1.0455, Top1_err: 24.9351, Top5_err: 1.9051 ||	Data/batch time: 0.0012/0.9434
[cap_102_OT_v6_1_4gpu]	epoch/iter [40/600][390/391] ||	Loss: 0.9779, Top1_err: 24.8800, Top5_err: 1.8060 ||	Data/batch time: 0.0010/0.9413
Summary	epoch/iter [40/600] ||	TRAIN, Top1_err: 24.8800, Top5_err: 1.8060 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [41/600][0/391] ||	Loss: 1.4145, Top1_err: 20.3125, Top5_err: 1.5625 ||	Data/batch time: 0.2507/1.2052
[cap_102_OT_v6_1_4gpu]	epoch/iter [41/600][100/391] ||	Loss: 0.8412, Top1_err: 22.1767, Top5_err: 1.3691 ||	Data/batch time: 0.0030/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [41/600][200/391] ||	Loss: 0.7700, Top1_err: 22.5979, Top5_err: 1.3876 ||	Data/batch time: 0.0017/0.9403
[cap_102_OT_v6_1_4gpu]	epoch/iter [41/600][300/391] ||	Loss: 0.7644, Top1_err: 22.6796, Top5_err: 1.3549 ||	Data/batch time: 0.0013/0.9412
[cap_102_OT_v6_1_4gpu]	epoch/iter [41/600][390/391] ||	Loss: 0.7317, Top1_err: 22.6540, Top5_err: 1.4160 ||	Data/batch time: 0.0011/0.9420
Summary	epoch/iter [41/600] ||	TRAIN, Top1_err: 22.6540, Top5_err: 1.4160 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [42/600][0/391] ||	Loss: 0.6474, Top1_err: 25.0000, Top5_err: 3.1250 ||	Data/batch time: 0.2139/1.1935
[cap_102_OT_v6_1_4gpu]	epoch/iter [42/600][100/391] ||	Loss: 0.5934, Top1_err: 20.5213, Top5_err: 1.3382 ||	Data/batch time: 0.0026/0.9467
[cap_102_OT_v6_1_4gpu]	epoch/iter [42/600][200/391] ||	Loss: 0.5893, Top1_err: 20.5146, Top5_err: 1.3060 ||	Data/batch time: 0.0015/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [42/600][300/391] ||	Loss: 0.5841, Top1_err: 20.8861, Top5_err: 1.3678 ||	Data/batch time: 0.0012/0.9416
[cap_102_OT_v6_1_4gpu]	epoch/iter [42/600][390/391] ||	Loss: 0.6050, Top1_err: 21.1340, Top5_err: 1.3560 ||	Data/batch time: 0.0010/0.9408
Summary	epoch/iter [42/600] ||	TRAIN, Top1_err: 21.1340, Top5_err: 1.3560 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [43/600][0/391] ||	Loss: 0.5876, Top1_err: 19.5312, Top5_err: 0.7812 ||	Data/batch time: 0.2255/1.2130
[cap_102_OT_v6_1_4gpu]	epoch/iter [43/600][100/391] ||	Loss: 0.7364, Top1_err: 19.5312, Top5_err: 1.0365 ||	Data/batch time: 0.0027/0.9433
[cap_102_OT_v6_1_4gpu]	epoch/iter [43/600][200/391] ||	Loss: 0.6787, Top1_err: 20.3280, Top5_err: 1.1427 ||	Data/batch time: 0.0016/0.9424
[cap_102_OT_v6_1_4gpu]	epoch/iter [43/600][300/391] ||	Loss: 0.6470, Top1_err: 20.2995, Top5_err: 1.1965 ||	Data/batch time: 0.0012/0.9408
[cap_102_OT_v6_1_4gpu]	epoch/iter [43/600][390/391] ||	Loss: 0.6453, Top1_err: 20.4180, Top5_err: 1.2400 ||	Data/batch time: 0.0010/0.9403
Summary	epoch/iter [43/600] ||	TRAIN, Top1_err: 20.4180, Top5_err: 1.2400 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [44/600][0/391] ||	Loss: 0.8000, Top1_err: 14.8438, Top5_err: 0.0000 ||	Data/batch time: 0.2399/1.1815
[cap_102_OT_v6_1_4gpu]	epoch/iter [44/600][100/391] ||	Loss: 0.5653, Top1_err: 17.8527, Top5_err: 0.9360 ||	Data/batch time: 0.0029/0.9418
[cap_102_OT_v6_1_4gpu]	epoch/iter [44/600][200/391] ||	Loss: 0.5685, Top1_err: 18.3769, Top5_err: 0.9873 ||	Data/batch time: 0.0017/0.9441
[cap_102_OT_v6_1_4gpu]	epoch/iter [44/600][300/391] ||	Loss: 0.5804, Top1_err: 18.6436, Top5_err: 1.0745 ||	Data/batch time: 0.0013/0.9423
[cap_102_OT_v6_1_4gpu]	epoch/iter [44/600][390/391] ||	Loss: 0.5890, Top1_err: 18.8420, Top5_err: 1.0760 ||	Data/batch time: 0.0011/0.9418
Summary	epoch/iter [44/600] ||	TRAIN, Top1_err: 18.8420, Top5_err: 1.0760 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [45/600][0/391] ||	Loss: 0.4131, Top1_err: 21.0938, Top5_err: 0.0000 ||	Data/batch time: 0.2156/1.1696
[cap_102_OT_v6_1_4gpu]	epoch/iter [45/600][100/391] ||	Loss: 0.6122, Top1_err: 17.4118, Top5_err: 0.9746 ||	Data/batch time: 0.0026/0.9431
[cap_102_OT_v6_1_4gpu]	epoch/iter [45/600][200/391] ||	Loss: 0.6166, Top1_err: 17.5606, Top5_err: 0.9212 ||	Data/batch time: 0.0015/0.9410
[cap_102_OT_v6_1_4gpu]	epoch/iter [45/600][300/391] ||	Loss: 0.5797, Top1_err: 17.6261, Top5_err: 0.9240 ||	Data/batch time: 0.0012/0.9412
[cap_102_OT_v6_1_4gpu]	epoch/iter [45/600][390/391] ||	Loss: 0.5774, Top1_err: 17.8520, Top5_err: 0.9600 ||	Data/batch time: 0.0010/0.9409
Summary	epoch/iter [45/600] ||	TRAIN, Top1_err: 17.8520, Top5_err: 0.9600 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [46/600][0/391] ||	Loss: 0.5198, Top1_err: 12.5000, Top5_err: 0.7812 ||	Data/batch time: 0.2523/1.2512
[cap_102_OT_v6_1_4gpu]	epoch/iter [46/600][100/391] ||	Loss: 0.5377, Top1_err: 16.3134, Top5_err: 0.8586 ||	Data/batch time: 0.0030/0.9454
[cap_102_OT_v6_1_4gpu]	epoch/iter [46/600][200/391] ||	Loss: 0.5613, Top1_err: 16.4607, Top5_err: 0.8240 ||	Data/batch time: 0.0017/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [46/600][300/391] ||	Loss: 0.5807, Top1_err: 16.7047, Top5_err: 0.8747 ||	Data/batch time: 0.0013/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [46/600][390/391] ||	Loss: 0.6010, Top1_err: 17.0200, Top5_err: 0.9280 ||	Data/batch time: 0.0011/0.9426
Summary	epoch/iter [46/600] ||	TRAIN, Top1_err: 17.0200, Top5_err: 0.9280 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [47/600][0/391] ||	Loss: 0.5343, Top1_err: 21.8750, Top5_err: 1.5625 ||	Data/batch time: 0.2623/1.2411
[cap_102_OT_v6_1_4gpu]	epoch/iter [47/600][100/391] ||	Loss: 0.6543, Top1_err: 14.9443, Top5_err: 0.7194 ||	Data/batch time: 0.0031/0.9453
[cap_102_OT_v6_1_4gpu]	epoch/iter [47/600][200/391] ||	Loss: 0.6635, Top1_err: 15.2830, Top5_err: 0.7735 ||	Data/batch time: 0.0018/0.9430
[cap_102_OT_v6_1_4gpu]	epoch/iter [47/600][300/391] ||	Loss: 0.6597, Top1_err: 15.6276, Top5_err: 0.7916 ||	Data/batch time: 0.0013/0.9423
[cap_102_OT_v6_1_4gpu]	epoch/iter [47/600][390/391] ||	Loss: 0.6409, Top1_err: 15.8940, Top5_err: 0.8360 ||	Data/batch time: 0.0011/0.9416
Summary	epoch/iter [47/600] ||	TRAIN, Top1_err: 15.8940, Top5_err: 0.8360 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [48/600][0/391] ||	Loss: 0.4576, Top1_err: 12.5000, Top5_err: 0.0000 ||	Data/batch time: 0.2462/1.2358
[cap_102_OT_v6_1_4gpu]	epoch/iter [48/600][100/391] ||	Loss: 0.5992, Top1_err: 14.4106, Top5_err: 0.6652 ||	Data/batch time: 0.0030/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [48/600][200/391] ||	Loss: 0.5792, Top1_err: 14.7893, Top5_err: 0.6413 ||	Data/batch time: 0.0017/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [48/600][300/391] ||	Loss: 0.6261, Top1_err: 15.2798, Top5_err: 0.6774 ||	Data/batch time: 0.0013/0.9427
[cap_102_OT_v6_1_4gpu]	epoch/iter [48/600][390/391] ||	Loss: 0.6521, Top1_err: 15.4800, Top5_err: 0.7680 ||	Data/batch time: 0.0011/0.9424
Summary	epoch/iter [48/600] ||	TRAIN, Top1_err: 15.4800, Top5_err: 0.7680 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [49/600][0/391] ||	Loss: 0.6324, Top1_err: 10.1562, Top5_err: 0.0000 ||	Data/batch time: 0.2291/1.2713
[cap_102_OT_v6_1_4gpu]	epoch/iter [49/600][100/391] ||	Loss: 0.5851, Top1_err: 13.8304, Top5_err: 0.6033 ||	Data/batch time: 0.0027/0.9458
[cap_102_OT_v6_1_4gpu]	epoch/iter [49/600][200/391] ||	Loss: 0.6233, Top1_err: 14.0275, Top5_err: 0.6180 ||	Data/batch time: 0.0016/0.9422
[cap_102_OT_v6_1_4gpu]	epoch/iter [49/600][300/391] ||	Loss: 0.6073, Top1_err: 14.2961, Top5_err: 0.6489 ||	Data/batch time: 0.0012/0.9416
[cap_102_OT_v6_1_4gpu]	epoch/iter [49/600][390/391] ||	Loss: 0.6166, Top1_err: 14.5280, Top5_err: 0.6920 ||	Data/batch time: 0.0010/0.9410
Summary	epoch/iter [49/600] ||	TRAIN, Top1_err: 14.5280, Top5_err: 0.6920 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

model saved at result/cap_102_OT_v6_1_4gpu/epoch_50.pth
[cap_102_OT_v6_1_4gpu]	epoch/iter [50/600][0/391] ||	Loss: 0.5604, Top1_err: 10.1562, Top5_err: 0.7812 ||	Data/batch time: 0.2223/1.1860
[cap_102_OT_v6_1_4gpu]	epoch/iter [50/600][100/391] ||	Loss: 0.5692, Top1_err: 13.4901, Top5_err: 0.5492 ||	Data/batch time: 0.0027/0.9474
[cap_102_OT_v6_1_4gpu]	epoch/iter [50/600][200/391] ||	Loss: 0.5972, Top1_err: 13.6466, Top5_err: 0.5791 ||	Data/batch time: 0.0016/0.9461
[cap_102_OT_v6_1_4gpu]	epoch/iter [50/600][300/391] ||	Loss: 0.6171, Top1_err: 13.9146, Top5_err: 0.5944 ||	Data/batch time: 0.0012/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [50/600][390/391] ||	Loss: 0.6112, Top1_err: 14.1300, Top5_err: 0.5940 ||	Data/batch time: 0.0010/0.9421
Summary	epoch/iter [50/600] ||	TRAIN, Top1_err: 14.1300, Top5_err: 0.5940 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [51/600][0/391] ||	Loss: 0.4531, Top1_err: 10.9375, Top5_err: 0.0000 ||	Data/batch time: 0.2613/1.1792
[cap_102_OT_v6_1_4gpu]	epoch/iter [51/600][100/391] ||	Loss: 0.6672, Top1_err: 12.6470, Top5_err: 0.4950 ||	Data/batch time: 0.0030/0.9421
[cap_102_OT_v6_1_4gpu]	epoch/iter [51/600][200/391] ||	Loss: 0.6386, Top1_err: 12.8459, Top5_err: 0.5131 ||	Data/batch time: 0.0018/0.9399
[cap_102_OT_v6_1_4gpu]	epoch/iter [51/600][300/391] ||	Loss: 0.6626, Top1_err: 13.1022, Top5_err: 0.5347 ||	Data/batch time: 0.0013/0.9400
[cap_102_OT_v6_1_4gpu]	epoch/iter [51/600][390/391] ||	Loss: 0.6692, Top1_err: 13.3320, Top5_err: 0.5380 ||	Data/batch time: 0.0011/0.9403
Summary	epoch/iter [51/600] ||	TRAIN, Top1_err: 13.3320, Top5_err: 0.5380 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [52/600][0/391] ||	Loss: 0.9550, Top1_err: 10.1562, Top5_err: 0.7812 ||	Data/batch time: 0.2275/1.1892
[cap_102_OT_v6_1_4gpu]	epoch/iter [52/600][100/391] ||	Loss: 0.6817, Top1_err: 11.3397, Top5_err: 0.4486 ||	Data/batch time: 0.0027/0.9479
[cap_102_OT_v6_1_4gpu]	epoch/iter [52/600][200/391] ||	Loss: 0.6537, Top1_err: 11.8587, Top5_err: 0.5092 ||	Data/batch time: 0.0016/0.9449
[cap_102_OT_v6_1_4gpu]	epoch/iter [52/600][300/391] ||	Loss: 0.6173, Top1_err: 12.2690, Top5_err: 0.5373 ||	Data/batch time: 0.0012/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [52/600][390/391] ||	Loss: 0.6236, Top1_err: 12.4380, Top5_err: 0.5560 ||	Data/batch time: 0.0011/0.9431
Summary	epoch/iter [52/600] ||	TRAIN, Top1_err: 12.4380, Top5_err: 0.5560 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [53/600][0/391] ||	Loss: 0.6022, Top1_err: 8.5938, Top5_err: 1.5625 ||	Data/batch time: 0.2114/1.1503
[cap_102_OT_v6_1_4gpu]	epoch/iter [53/600][100/391] ||	Loss: 0.5347, Top1_err: 10.9298, Top5_err: 0.4718 ||	Data/batch time: 0.0026/0.9443
[cap_102_OT_v6_1_4gpu]	epoch/iter [53/600][200/391] ||	Loss: 0.5247, Top1_err: 11.5594, Top5_err: 0.5053 ||	Data/batch time: 0.0015/0.9421
[cap_102_OT_v6_1_4gpu]	epoch/iter [53/600][300/391] ||	Loss: 0.5211, Top1_err: 11.8122, Top5_err: 0.5035 ||	Data/batch time: 0.0012/0.9412
[cap_102_OT_v6_1_4gpu]	epoch/iter [53/600][390/391] ||	Loss: 0.5412, Top1_err: 11.8840, Top5_err: 0.5060 ||	Data/batch time: 0.0010/0.9403
Summary	epoch/iter [53/600] ||	TRAIN, Top1_err: 11.8840, Top5_err: 0.5060 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [54/600][0/391] ||	Loss: 0.1627, Top1_err: 10.9375, Top5_err: 0.7812 ||	Data/batch time: 0.2641/1.2185
[cap_102_OT_v6_1_4gpu]	epoch/iter [54/600][100/391] ||	Loss: 0.4818, Top1_err: 10.2336, Top5_err: 0.3403 ||	Data/batch time: 0.0031/0.9491
[cap_102_OT_v6_1_4gpu]	epoch/iter [54/600][200/391] ||	Loss: 0.4744, Top1_err: 10.4866, Top5_err: 0.2993 ||	Data/batch time: 0.0018/0.9436
[cap_102_OT_v6_1_4gpu]	epoch/iter [54/600][300/391] ||	Loss: 0.4914, Top1_err: 10.8856, Top5_err: 0.3712 ||	Data/batch time: 0.0014/0.9423
[cap_102_OT_v6_1_4gpu]	epoch/iter [54/600][390/391] ||	Loss: 0.5052, Top1_err: 11.2660, Top5_err: 0.4080 ||	Data/batch time: 0.0012/0.9421
Summary	epoch/iter [54/600] ||	TRAIN, Top1_err: 11.2660, Top5_err: 0.4080 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [55/600][0/391] ||	Loss: 0.4840, Top1_err: 9.3750, Top5_err: 0.0000 ||	Data/batch time: 0.2550/1.2002
[cap_102_OT_v6_1_4gpu]	epoch/iter [55/600][100/391] ||	Loss: 0.5196, Top1_err: 9.5838, Top5_err: 0.2785 ||	Data/batch time: 0.0030/0.9436
[cap_102_OT_v6_1_4gpu]	epoch/iter [55/600][200/391] ||	Loss: 0.4980, Top1_err: 10.1562, Top5_err: 0.3226 ||	Data/batch time: 0.0017/0.9441
[cap_102_OT_v6_1_4gpu]	epoch/iter [55/600][300/391] ||	Loss: 0.4860, Top1_err: 10.5534, Top5_err: 0.3634 ||	Data/batch time: 0.0013/0.9425
[cap_102_OT_v6_1_4gpu]	epoch/iter [55/600][390/391] ||	Loss: 0.4735, Top1_err: 10.8320, Top5_err: 0.3920 ||	Data/batch time: 0.0011/0.9417
Summary	epoch/iter [55/600] ||	TRAIN, Top1_err: 10.8320, Top5_err: 0.3920 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [56/600][0/391] ||	Loss: 0.4795, Top1_err: 8.5938, Top5_err: 2.3438 ||	Data/batch time: 0.2333/1.2134
[cap_102_OT_v6_1_4gpu]	epoch/iter [56/600][100/391] ||	Loss: 0.4433, Top1_err: 9.2435, Top5_err: 0.4409 ||	Data/batch time: 0.0028/0.9445
[cap_102_OT_v6_1_4gpu]	epoch/iter [56/600][200/391] ||	Loss: 0.4512, Top1_err: 9.3711, Top5_err: 0.3498 ||	Data/batch time: 0.0016/0.9429
[cap_102_OT_v6_1_4gpu]	epoch/iter [56/600][300/391] ||	Loss: 0.4579, Top1_err: 9.5800, Top5_err: 0.3582 ||	Data/batch time: 0.0012/0.9419
[cap_102_OT_v6_1_4gpu]	epoch/iter [56/600][390/391] ||	Loss: 0.4598, Top1_err: 10.0380, Top5_err: 0.4080 ||	Data/batch time: 0.0011/0.9414
Summary	epoch/iter [56/600] ||	TRAIN, Top1_err: 10.0380, Top5_err: 0.4080 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [57/600][0/391] ||	Loss: 0.3715, Top1_err: 7.0312, Top5_err: 0.0000 ||	Data/batch time: 0.2325/1.1892
[cap_102_OT_v6_1_4gpu]	epoch/iter [57/600][100/391] ||	Loss: 2.5320, Top1_err: 9.1352, Top5_err: 0.2707 ||	Data/batch time: 0.0028/0.9414
[cap_102_OT_v6_1_4gpu]	epoch/iter [57/600][200/391] ||	Loss: 2.5359, Top1_err: 9.8492, Top5_err: 0.3654 ||	Data/batch time: 0.0016/0.9405
[cap_102_OT_v6_1_4gpu]	epoch/iter [57/600][300/391] ||	Loss: 1.9366, Top1_err: 10.3535, Top5_err: 0.4360 ||	Data/batch time: 0.0013/0.9407
[cap_102_OT_v6_1_4gpu]	epoch/iter [57/600][390/391] ||	Loss: 1.7077, Top1_err: 10.5300, Top5_err: 0.4500 ||	Data/batch time: 0.0011/0.9413
Summary	epoch/iter [57/600] ||	TRAIN, Top1_err: 10.5300, Top5_err: 0.4500 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [58/600][0/391] ||	Loss: 0.6230, Top1_err: 7.8125, Top5_err: 0.7812 ||	Data/batch time: 0.2282/1.1712
[cap_102_OT_v6_1_4gpu]	epoch/iter [58/600][100/391] ||	Loss: 0.7785, Top1_err: 8.5860, Top5_err: 0.3094 ||	Data/batch time: 0.0027/0.9486
[cap_102_OT_v6_1_4gpu]	epoch/iter [58/600][200/391] ||	Loss: 0.7423, Top1_err: 8.5860, Top5_err: 0.3265 ||	Data/batch time: 0.0016/0.9435
[cap_102_OT_v6_1_4gpu]	epoch/iter [58/600][300/391] ||	Loss: 0.7248, Top1_err: 8.9000, Top5_err: 0.3296 ||	Data/batch time: 0.0012/0.9432
[cap_102_OT_v6_1_4gpu]	epoch/iter [58/600][390/391] ||	Loss: 0.7280, Top1_err: 9.2460, Top5_err: 0.3560 ||	Data/batch time: 0.0011/0.9425
Summary	epoch/iter [58/600] ||	TRAIN, Top1_err: 9.2460, Top5_err: 0.3560 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [59/600][0/391] ||	Loss: 0.3331, Top1_err: 6.2500, Top5_err: 0.0000 ||	Data/batch time: 0.2524/1.1794
[cap_102_OT_v6_1_4gpu]	epoch/iter [59/600][100/391] ||	Loss: 0.4864, Top1_err: 7.7506, Top5_err: 0.2321 ||	Data/batch time: 0.0030/0.9478
[cap_102_OT_v6_1_4gpu]	epoch/iter [59/600][200/391] ||	Loss: 0.5253, Top1_err: 8.0030, Top5_err: 0.2682 ||	Data/batch time: 0.0017/0.9453
[cap_102_OT_v6_1_4gpu]	epoch/iter [59/600][300/391] ||	Loss: 0.5178, Top1_err: 8.3238, Top5_err: 0.2985 ||	Data/batch time: 0.0013/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [59/600][390/391] ||	Loss: 1.6958, Top1_err: 8.6020, Top5_err: 0.3060 ||	Data/batch time: 0.0011/0.9432
Summary	epoch/iter [59/600] ||	TRAIN, Top1_err: 8.6020, Top5_err: 0.3060 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [60/600][0/391] ||	Loss: 7.5440, Top1_err: 7.0312, Top5_err: 0.0000 ||	Data/batch time: 0.2285/1.1604
[cap_102_OT_v6_1_4gpu]	epoch/iter [60/600][100/391] ||	Loss: 6.1829, Top1_err: 8.0291, Top5_err: 0.2785 ||	Data/batch time: 0.0028/0.9493
[cap_102_OT_v6_1_4gpu]	epoch/iter [60/600][200/391] ||	Loss: 5.9670, Top1_err: 8.2478, Top5_err: 0.2837 ||	Data/batch time: 0.0016/0.9449
[cap_102_OT_v6_1_4gpu]	epoch/iter [60/600][300/391] ||	Loss: 5.9286, Top1_err: 8.4147, Top5_err: 0.3037 ||	Data/batch time: 0.0012/0.9435
[cap_102_OT_v6_1_4gpu]	epoch/iter [60/600][390/391] ||	Loss: 5.9893, Top1_err: 8.6380, Top5_err: 0.3140 ||	Data/batch time: 0.0011/0.9437
Summary	epoch/iter [60/600] ||	TRAIN, Top1_err: 8.6380, Top5_err: 0.3140 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [61/600][0/391] ||	Loss: 6.6054, Top1_err: 8.5938, Top5_err: 0.0000 ||	Data/batch time: 0.2185/1.1569
[cap_102_OT_v6_1_4gpu]	epoch/iter [61/600][100/391] ||	Loss: 5.8480, Top1_err: 7.1473, Top5_err: 0.2166 ||	Data/batch time: 0.0026/0.9417
[cap_102_OT_v6_1_4gpu]	epoch/iter [61/600][200/391] ||	Loss: 5.7136, Top1_err: 7.5326, Top5_err: 0.2138 ||	Data/batch time: 0.0016/0.9434
[cap_102_OT_v6_1_4gpu]	epoch/iter [61/600][300/391] ||	Loss: 4.3619, Top1_err: 8.2200, Top5_err: 0.2907 ||	Data/batch time: 0.0012/0.9430
[cap_102_OT_v6_1_4gpu]	epoch/iter [61/600][390/391] ||	Loss: 3.5431, Top1_err: 8.3120, Top5_err: 0.2960 ||	Data/batch time: 0.0010/0.9422
Summary	epoch/iter [61/600] ||	TRAIN, Top1_err: 8.3120, Top5_err: 0.2960 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [62/600][0/391] ||	Loss: 0.4829, Top1_err: 4.6875, Top5_err: 0.0000 ||	Data/batch time: 0.2267/1.1452
[cap_102_OT_v6_1_4gpu]	epoch/iter [62/600][100/391] ||	Loss: 0.8703, Top1_err: 6.7528, Top5_err: 0.3094 ||	Data/batch time: 0.0027/0.9462
[cap_102_OT_v6_1_4gpu]	epoch/iter [62/600][200/391] ||	Loss: 0.8713, Top1_err: 7.2256, Top5_err: 0.3109 ||	Data/batch time: 0.0016/0.9443
[cap_102_OT_v6_1_4gpu]	epoch/iter [62/600][300/391] ||	Loss: 0.9084, Top1_err: 7.5789, Top5_err: 0.2933 ||	Data/batch time: 0.0012/0.9451
[cap_102_OT_v6_1_4gpu]	epoch/iter [62/600][390/391] ||	Loss: 0.8698, Top1_err: 7.7060, Top5_err: 0.2840 ||	Data/batch time: 0.0011/0.9431
Summary	epoch/iter [62/600] ||	TRAIN, Top1_err: 7.7060, Top5_err: 0.2840 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [63/600][0/391] ||	Loss: 0.5081, Top1_err: 4.6875, Top5_err: 0.7812 ||	Data/batch time: 0.2262/1.1504
[cap_102_OT_v6_1_4gpu]	epoch/iter [63/600][100/391] ||	Loss: 0.9703, Top1_err: 6.2809, Top5_err: 0.2088 ||	Data/batch time: 0.0027/0.9442
[cap_102_OT_v6_1_4gpu]	epoch/iter [63/600][200/391] ||	Loss: 0.9386, Top1_err: 6.5065, Top5_err: 0.2254 ||	Data/batch time: 0.0016/0.9441
[cap_102_OT_v6_1_4gpu]	epoch/iter [63/600][300/391] ||	Loss: 0.9112, Top1_err: 6.8106, Top5_err: 0.2570 ||	Data/batch time: 0.0012/0.9434
[cap_102_OT_v6_1_4gpu]	epoch/iter [63/600][390/391] ||	Loss: 0.9400, Top1_err: 7.0800, Top5_err: 0.2560 ||	Data/batch time: 0.0011/0.9425
Summary	epoch/iter [63/600] ||	TRAIN, Top1_err: 7.0800, Top5_err: 0.2560 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [64/600][0/391] ||	Loss: 0.2487, Top1_err: 5.4688, Top5_err: 0.0000 ||	Data/batch time: 0.2008/1.1673
[cap_102_OT_v6_1_4gpu]	epoch/iter [64/600][100/391] ||	Loss: 0.8898, Top1_err: 6.3892, Top5_err: 0.2398 ||	Data/batch time: 0.0024/0.9477
[cap_102_OT_v6_1_4gpu]	epoch/iter [64/600][200/391] ||	Loss: 0.8082, Top1_err: 6.6387, Top5_err: 0.2215 ||	Data/batch time: 0.0015/0.9440
[cap_102_OT_v6_1_4gpu]	epoch/iter [64/600][300/391] ||	Loss: 0.7783, Top1_err: 6.8366, Top5_err: 0.2440 ||	Data/batch time: 0.0011/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [64/600][390/391] ||	Loss: 0.7841, Top1_err: 6.9880, Top5_err: 0.2520 ||	Data/batch time: 0.0010/0.9432
Summary	epoch/iter [64/600] ||	TRAIN, Top1_err: 6.9880, Top5_err: 0.2520 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [65/600][0/391] ||	Loss: 2.4736, Top1_err: 0.7812, Top5_err: 0.0000 ||	Data/batch time: 0.2429/1.1887
[cap_102_OT_v6_1_4gpu]	epoch/iter [65/600][100/391] ||	Loss: 0.8624, Top1_err: 5.6699, Top5_err: 0.1702 ||	Data/batch time: 0.0029/0.9471
[cap_102_OT_v6_1_4gpu]	epoch/iter [65/600][200/391] ||	Loss: 0.9695, Top1_err: 6.1684, Top5_err: 0.2138 ||	Data/batch time: 0.0017/0.9436
[cap_102_OT_v6_1_4gpu]	epoch/iter [65/600][300/391] ||	Loss: 1.0043, Top1_err: 6.4499, Top5_err: 0.2466 ||	Data/batch time: 0.0013/0.9441
[cap_102_OT_v6_1_4gpu]	epoch/iter [65/600][390/391] ||	Loss: 1.1018, Top1_err: 6.5180, Top5_err: 0.2600 ||	Data/batch time: 0.0011/0.9428
Summary	epoch/iter [65/600] ||	TRAIN, Top1_err: 6.5180, Top5_err: 0.2600 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [66/600][0/391] ||	Loss: 0.8234, Top1_err: 3.9062, Top5_err: 0.0000 ||	Data/batch time: 0.2116/1.1615
[cap_102_OT_v6_1_4gpu]	epoch/iter [66/600][100/391] ||	Loss: 1.2648, Top1_err: 5.8555, Top5_err: 0.1702 ||	Data/batch time: 0.0026/0.9492
[cap_102_OT_v6_1_4gpu]	epoch/iter [66/600][200/391] ||	Loss: 1.2614, Top1_err: 5.8691, Top5_err: 0.1982 ||	Data/batch time: 0.0015/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [66/600][300/391] ||	Loss: 1.3396, Top1_err: 6.2085, Top5_err: 0.1999 ||	Data/batch time: 0.0012/0.9434
[cap_102_OT_v6_1_4gpu]	epoch/iter [66/600][390/391] ||	Loss: 1.3568, Top1_err: 6.4320, Top5_err: 0.2040 ||	Data/batch time: 0.0010/0.9427
Summary	epoch/iter [66/600] ||	TRAIN, Top1_err: 6.4320, Top5_err: 0.2040 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [67/600][0/391] ||	Loss: 1.9547, Top1_err: 6.2500, Top5_err: 0.7812 ||	Data/batch time: 0.2222/1.1588
[cap_102_OT_v6_1_4gpu]	epoch/iter [67/600][100/391] ||	Loss: 1.6386, Top1_err: 5.7936, Top5_err: 0.1702 ||	Data/batch time: 0.0027/0.9465
[cap_102_OT_v6_1_4gpu]	epoch/iter [67/600][200/391] ||	Loss: 1.6765, Top1_err: 5.9935, Top5_err: 0.1943 ||	Data/batch time: 0.0016/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [67/600][300/391] ||	Loss: 1.7277, Top1_err: 6.0164, Top5_err: 0.1947 ||	Data/batch time: 0.0012/0.9421
[cap_102_OT_v6_1_4gpu]	epoch/iter [67/600][390/391] ||	Loss: 1.9065, Top1_err: 6.2800, Top5_err: 0.2120 ||	Data/batch time: 0.0010/0.9422
Summary	epoch/iter [67/600] ||	TRAIN, Top1_err: 6.2800, Top5_err: 0.2120 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [68/600][0/391] ||	Loss: 1.6792, Top1_err: 10.9375, Top5_err: 0.0000 ||	Data/batch time: 0.2344/1.2166
[cap_102_OT_v6_1_4gpu]	epoch/iter [68/600][100/391] ||	Loss: 2.1264, Top1_err: 5.3295, Top5_err: 0.1856 ||	Data/batch time: 0.0028/0.9512
[cap_102_OT_v6_1_4gpu]	epoch/iter [68/600][200/391] ||	Loss: 1.7353, Top1_err: 5.4882, Top5_err: 0.1671 ||	Data/batch time: 0.0016/0.9482
[cap_102_OT_v6_1_4gpu]	epoch/iter [68/600][300/391] ||	Loss: 1.6117, Top1_err: 5.8088, Top5_err: 0.1765 ||	Data/batch time: 0.0013/0.9467
[cap_102_OT_v6_1_4gpu]	epoch/iter [68/600][390/391] ||	Loss: 1.5414, Top1_err: 5.9560, Top5_err: 0.1760 ||	Data/batch time: 0.0011/0.9453
Summary	epoch/iter [68/600] ||	TRAIN, Top1_err: 5.9560, Top5_err: 0.1760 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [69/600][0/391] ||	Loss: 2.3199, Top1_err: 6.2500, Top5_err: 0.0000 ||	Data/batch time: 0.2417/1.1708
[cap_102_OT_v6_1_4gpu]	epoch/iter [69/600][100/391] ||	Loss: 1.4990, Top1_err: 5.1516, Top5_err: 0.1547 ||	Data/batch time: 0.0029/0.9413
[cap_102_OT_v6_1_4gpu]	epoch/iter [69/600][200/391] ||	Loss: 1.4673, Top1_err: 5.4610, Top5_err: 0.1943 ||	Data/batch time: 0.0017/0.9411
[cap_102_OT_v6_1_4gpu]	epoch/iter [69/600][300/391] ||	Loss: 1.4262, Top1_err: 5.6219, Top5_err: 0.1843 ||	Data/batch time: 0.0013/0.9420
[cap_102_OT_v6_1_4gpu]	epoch/iter [69/600][390/391] ||	Loss: 1.7397, Top1_err: 5.8420, Top5_err: 0.1960 ||	Data/batch time: 0.0011/0.9421
Summary	epoch/iter [69/600] ||	TRAIN, Top1_err: 5.8420, Top5_err: 0.1960 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [70/600][0/391] ||	Loss: 5.8236, Top1_err: 5.4688, Top5_err: 0.0000 ||	Data/batch time: 0.2555/1.1935
[cap_102_OT_v6_1_4gpu]	epoch/iter [70/600][100/391] ||	Loss: 6.7171, Top1_err: 5.1671, Top5_err: 0.1547 ||	Data/batch time: 0.0030/0.9496
[cap_102_OT_v6_1_4gpu]	epoch/iter [70/600][200/391] ||	Loss: 5.8561, Top1_err: 5.4454, Top5_err: 0.1594 ||	Data/batch time: 0.0018/0.9464
[cap_102_OT_v6_1_4gpu]	epoch/iter [70/600][300/391] ||	Loss: 4.9003, Top1_err: 5.7335, Top5_err: 0.1817 ||	Data/batch time: 0.0013/0.9443
[cap_102_OT_v6_1_4gpu]	epoch/iter [70/600][390/391] ||	Loss: 4.0337, Top1_err: 5.9480, Top5_err: 0.1900 ||	Data/batch time: 0.0011/0.9443
Summary	epoch/iter [70/600] ||	TRAIN, Top1_err: 5.9480, Top5_err: 0.1900 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [71/600][0/391] ||	Loss: 3.9574, Top1_err: 5.4688, Top5_err: 0.0000 ||	Data/batch time: 0.2024/1.1778
[cap_102_OT_v6_1_4gpu]	epoch/iter [71/600][100/391] ||	Loss: 1.4777, Top1_err: 5.1825, Top5_err: 0.1083 ||	Data/batch time: 0.0025/0.9450
[cap_102_OT_v6_1_4gpu]	epoch/iter [71/600][200/391] ||	Loss: 1.5837, Top1_err: 5.1695, Top5_err: 0.1283 ||	Data/batch time: 0.0015/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [71/600][300/391] ||	Loss: 1.4596, Top1_err: 5.2923, Top5_err: 0.1635 ||	Data/batch time: 0.0012/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [71/600][390/391] ||	Loss: 1.3183, Top1_err: 5.4760, Top5_err: 0.1760 ||	Data/batch time: 0.0010/0.9433
Summary	epoch/iter [71/600] ||	TRAIN, Top1_err: 5.4760, Top5_err: 0.1760 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [72/600][0/391] ||	Loss: 0.1129, Top1_err: 3.1250, Top5_err: 0.0000 ||	Data/batch time: 0.2268/1.1752
[cap_102_OT_v6_1_4gpu]	epoch/iter [72/600][100/391] ||	Loss: 4.8138, Top1_err: 5.3759, Top5_err: 0.1624 ||	Data/batch time: 0.0028/0.9484
[cap_102_OT_v6_1_4gpu]	epoch/iter [72/600][200/391] ||	Loss: 4.4770, Top1_err: 7.0585, Top5_err: 0.3071 ||	Data/batch time: 0.0016/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [72/600][300/391] ||	Loss: 4.4583, Top1_err: 7.2623, Top5_err: 0.2881 ||	Data/batch time: 0.0012/0.9424
[cap_102_OT_v6_1_4gpu]	epoch/iter [72/600][390/391] ||	Loss: 4.5893, Top1_err: 7.1760, Top5_err: 0.3160 ||	Data/batch time: 0.0011/0.9419
Summary	epoch/iter [72/600] ||	TRAIN, Top1_err: 7.1760, Top5_err: 0.3160 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [73/600][0/391] ||	Loss: 4.0498, Top1_err: 5.4688, Top5_err: 0.0000 ||	Data/batch time: 0.2347/1.1878
[cap_102_OT_v6_1_4gpu]	epoch/iter [73/600][100/391] ||	Loss: 3.9892, Top1_err: 5.4455, Top5_err: 0.1624 ||	Data/batch time: 0.0029/0.9449
[cap_102_OT_v6_1_4gpu]	epoch/iter [73/600][200/391] ||	Loss: 4.1664, Top1_err: 5.5426, Top5_err: 0.1438 ||	Data/batch time: 0.0017/0.9453
[cap_102_OT_v6_1_4gpu]	epoch/iter [73/600][300/391] ||	Loss: 4.3960, Top1_err: 5.5466, Top5_err: 0.1765 ||	Data/batch time: 0.0013/0.9442
[cap_102_OT_v6_1_4gpu]	epoch/iter [73/600][390/391] ||	Loss: 4.3756, Top1_err: 5.5820, Top5_err: 0.1760 ||	Data/batch time: 0.0011/0.9434
Summary	epoch/iter [73/600] ||	TRAIN, Top1_err: 5.5820, Top5_err: 0.1760 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [74/600][0/391] ||	Loss: 3.1474, Top1_err: 1.5625, Top5_err: 0.0000 ||	Data/batch time: 0.2202/1.2220
[cap_102_OT_v6_1_4gpu]	epoch/iter [74/600][100/391] ||	Loss: 4.7292, Top1_err: 4.2930, Top5_err: 0.1160 ||	Data/batch time: 0.0027/0.9481
[cap_102_OT_v6_1_4gpu]	epoch/iter [74/600][200/391] ||	Loss: 4.9873, Top1_err: 4.3338, Top5_err: 0.1555 ||	Data/batch time: 0.0016/0.9462
[cap_102_OT_v6_1_4gpu]	epoch/iter [74/600][300/391] ||	Loss: 5.2680, Top1_err: 4.5188, Top5_err: 0.1428 ||	Data/batch time: 0.0012/0.9447
[cap_102_OT_v6_1_4gpu]	epoch/iter [74/600][390/391] ||	Loss: 5.6636, Top1_err: 4.7060, Top5_err: 0.1460 ||	Data/batch time: 0.0010/0.9432
Summary	epoch/iter [74/600] ||	TRAIN, Top1_err: 4.7060, Top5_err: 0.1460 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

model saved at result/cap_102_OT_v6_1_4gpu/epoch_75.pth
[cap_102_OT_v6_1_4gpu]	epoch/iter [75/600][0/391] ||	Loss: 6.6761, Top1_err: 3.9062, Top5_err: 0.0000 ||	Data/batch time: 0.2399/1.1967
[cap_102_OT_v6_1_4gpu]	epoch/iter [75/600][100/391] ||	Loss: 5.8505, Top1_err: 4.2389, Top5_err: 0.1624 ||	Data/batch time: 0.0029/0.9437
[cap_102_OT_v6_1_4gpu]	epoch/iter [75/600][200/391] ||	Loss: 5.3741, Top1_err: 4.4737, Top5_err: 0.1555 ||	Data/batch time: 0.0017/0.9415
[cap_102_OT_v6_1_4gpu]	epoch/iter [75/600][300/391] ||	Loss: 5.4037, Top1_err: 4.5733, Top5_err: 0.1661 ||	Data/batch time: 0.0013/0.9416
[cap_102_OT_v6_1_4gpu]	epoch/iter [75/600][390/391] ||	Loss: 5.5503, Top1_err: 4.7140, Top5_err: 0.1720 ||	Data/batch time: 0.0011/0.9421
Summary	epoch/iter [75/600] ||	TRAIN, Top1_err: 4.7140, Top5_err: 0.1720 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [76/600][0/391] ||	Loss: 6.3211, Top1_err: 7.8125, Top5_err: 0.0000 ||	Data/batch time: 0.2182/1.1610
[cap_102_OT_v6_1_4gpu]	epoch/iter [76/600][100/391] ||	Loss: 5.8381, Top1_err: 4.2157, Top5_err: 0.0851 ||	Data/batch time: 0.0027/0.9485
[cap_102_OT_v6_1_4gpu]	epoch/iter [76/600][200/391] ||	Loss: 5.5654, Top1_err: 4.4232, Top5_err: 0.1088 ||	Data/batch time: 0.0016/0.9447
[cap_102_OT_v6_1_4gpu]	epoch/iter [76/600][300/391] ||	Loss: 5.6442, Top1_err: 4.5240, Top5_err: 0.1246 ||	Data/batch time: 0.0012/0.9440
[cap_102_OT_v6_1_4gpu]	epoch/iter [76/600][390/391] ||	Loss: 5.7023, Top1_err: 4.6920, Top5_err: 0.1500 ||	Data/batch time: 0.0011/0.9427
Summary	epoch/iter [76/600] ||	TRAIN, Top1_err: 4.6920, Top5_err: 0.1500 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [77/600][0/391] ||	Loss: 5.5470, Top1_err: 3.9062, Top5_err: 0.7812 ||	Data/batch time: 0.2333/1.2134
[cap_102_OT_v6_1_4gpu]	epoch/iter [77/600][100/391] ||	Loss: 7.1409, Top1_err: 3.9913, Top5_err: 0.1160 ||	Data/batch time: 0.0028/0.9440
[cap_102_OT_v6_1_4gpu]	epoch/iter [77/600][200/391] ||	Loss: 7.1602, Top1_err: 4.2483, Top5_err: 0.1477 ||	Data/batch time: 0.0017/0.9449
[cap_102_OT_v6_1_4gpu]	epoch/iter [77/600][300/391] ||	Loss: 7.0709, Top1_err: 4.3916, Top5_err: 0.1505 ||	Data/batch time: 0.0013/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [77/600][390/391] ||	Loss: 7.1189, Top1_err: 4.5940, Top5_err: 0.1560 ||	Data/batch time: 0.0011/0.9425
Summary	epoch/iter [77/600] ||	TRAIN, Top1_err: 4.5940, Top5_err: 0.1560 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [78/600][0/391] ||	Loss: 4.7583, Top1_err: 5.4688, Top5_err: 0.7812 ||	Data/batch time: 0.2249/1.1851
[cap_102_OT_v6_1_4gpu]	epoch/iter [78/600][100/391] ||	Loss: 7.7908, Top1_err: 3.8521, Top5_err: 0.1006 ||	Data/batch time: 0.0027/0.9399
[cap_102_OT_v6_1_4gpu]	epoch/iter [78/600][200/391] ||	Loss: 6.5906, Top1_err: 5.2083, Top5_err: 0.2293 ||	Data/batch time: 0.0016/0.9431
[cap_102_OT_v6_1_4gpu]	epoch/iter [78/600][300/391] ||	Loss: 4.9702, Top1_err: 10.7818, Top5_err: 0.8384 ||	Data/batch time: 0.0012/0.9420
[cap_102_OT_v6_1_4gpu]	epoch/iter [78/600][390/391] ||	Loss: 4.0889, Top1_err: 13.3640, Top5_err: 1.0040 ||	Data/batch time: 0.0011/0.9424
Summary	epoch/iter [78/600] ||	TRAIN, Top1_err: 13.3640, Top5_err: 1.0040 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [79/600][0/391] ||	Loss: 1.7728, Top1_err: 21.0938, Top5_err: 4.6875 ||	Data/batch time: 0.2270/1.1658
[cap_102_OT_v6_1_4gpu]	epoch/iter [79/600][100/391] ||	Loss: 1.6929, Top1_err: 21.0396, Top5_err: 1.6863 ||	Data/batch time: 0.0027/0.9434
[cap_102_OT_v6_1_4gpu]	epoch/iter [79/600][200/391] ||	Loss: 1.5400, Top1_err: 19.3719, Top5_err: 1.4148 ||	Data/batch time: 0.0016/0.9430
[cap_102_OT_v6_1_4gpu]	epoch/iter [79/600][300/391] ||	Loss: 1.5472, Top1_err: 18.4126, Top5_err: 1.3029 ||	Data/batch time: 0.0012/0.9436
[cap_102_OT_v6_1_4gpu]	epoch/iter [79/600][390/391] ||	Loss: 1.4911, Top1_err: 17.6760, Top5_err: 1.1920 ||	Data/batch time: 0.0011/0.9423
Summary	epoch/iter [79/600] ||	TRAIN, Top1_err: 17.6760, Top5_err: 1.1920 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [80/600][0/391] ||	Loss: 3.1275, Top1_err: 14.8438, Top5_err: 0.0000 ||	Data/batch time: 0.2458/1.1843
[cap_102_OT_v6_1_4gpu]	epoch/iter [80/600][100/391] ||	Loss: 1.6485, Top1_err: 12.2215, Top5_err: 0.6111 ||	Data/batch time: 0.0030/0.9512
[cap_102_OT_v6_1_4gpu]	epoch/iter [80/600][200/391] ||	Loss: 1.6085, Top1_err: 13.0986, Top5_err: 0.6841 ||	Data/batch time: 0.0017/0.9475
[cap_102_OT_v6_1_4gpu]	epoch/iter [80/600][300/391] ||	Loss: 1.5423, Top1_err: 13.4058, Top5_err: 0.7112 ||	Data/batch time: 0.0013/0.9455
[cap_102_OT_v6_1_4gpu]	epoch/iter [80/600][390/391] ||	Loss: 1.4611, Top1_err: 13.5820, Top5_err: 0.7360 ||	Data/batch time: 0.0011/0.9446
Summary	epoch/iter [80/600] ||	TRAIN, Top1_err: 13.5820, Top5_err: 0.7360 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [81/600][0/391] ||	Loss: 1.8964, Top1_err: 10.1562, Top5_err: 1.5625 ||	Data/batch time: 0.2166/1.1791
[cap_102_OT_v6_1_4gpu]	epoch/iter [81/600][100/391] ||	Loss: 1.5922, Top1_err: 12.8094, Top5_err: 0.6111 ||	Data/batch time: 0.0027/0.9454
[cap_102_OT_v6_1_4gpu]	epoch/iter [81/600][200/391] ||	Loss: 1.3065, Top1_err: 16.4101, Top5_err: 1.0533 ||	Data/batch time: 0.0016/0.9443
[cap_102_OT_v6_1_4gpu]	epoch/iter [81/600][300/391] ||	Loss: 1.2442, Top1_err: 16.4114, Top5_err: 0.9811 ||	Data/batch time: 0.0012/0.9450
[cap_102_OT_v6_1_4gpu]	epoch/iter [81/600][390/391] ||	Loss: 1.2431, Top1_err: 16.1440, Top5_err: 0.9680 ||	Data/batch time: 0.0011/0.9454
Summary	epoch/iter [81/600] ||	TRAIN, Top1_err: 16.1440, Top5_err: 0.9680 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [82/600][0/391] ||	Loss: 0.6019, Top1_err: 7.8125, Top5_err: 0.0000 ||	Data/batch time: 0.2492/1.2194
[cap_102_OT_v6_1_4gpu]	epoch/iter [82/600][100/391] ||	Loss: 1.2273, Top1_err: 11.3011, Top5_err: 0.4873 ||	Data/batch time: 0.0030/0.9492
[cap_102_OT_v6_1_4gpu]	epoch/iter [82/600][200/391] ||	Loss: 1.0681, Top1_err: 11.2174, Top5_err: 0.4897 ||	Data/batch time: 0.0017/0.9451
[cap_102_OT_v6_1_4gpu]	epoch/iter [82/600][300/391] ||	Loss: 1.1063, Top1_err: 11.1374, Top5_err: 0.4983 ||	Data/batch time: 0.0013/0.9470
[cap_102_OT_v6_1_4gpu]	epoch/iter [82/600][390/391] ||	Loss: 1.1141, Top1_err: 11.1520, Top5_err: 0.5040 ||	Data/batch time: 0.0011/0.9465
Summary	epoch/iter [82/600] ||	TRAIN, Top1_err: 11.1520, Top5_err: 0.5040 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [83/600][0/391] ||	Loss: 1.8857, Top1_err: 10.1562, Top5_err: 0.0000 ||	Data/batch time: 0.2381/1.1958
[cap_102_OT_v6_1_4gpu]	epoch/iter [83/600][100/391] ||	Loss: 0.9642, Top1_err: 8.1761, Top5_err: 0.3171 ||	Data/batch time: 0.0029/0.9457
[cap_102_OT_v6_1_4gpu]	epoch/iter [83/600][200/391] ||	Loss: 0.9611, Top1_err: 8.4266, Top5_err: 0.3226 ||	Data/batch time: 0.0017/0.9457
[cap_102_OT_v6_1_4gpu]	epoch/iter [83/600][300/391] ||	Loss: 1.0125, Top1_err: 8.6794, Top5_err: 0.3556 ||	Data/batch time: 0.0013/0.9458
[cap_102_OT_v6_1_4gpu]	epoch/iter [83/600][390/391] ||	Loss: 1.0705, Top1_err: 8.8100, Top5_err: 0.3620 ||	Data/batch time: 0.0011/0.9451
Summary	epoch/iter [83/600] ||	TRAIN, Top1_err: 8.8100, Top5_err: 0.3620 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [84/600][0/391] ||	Loss: 1.0414, Top1_err: 8.5938, Top5_err: 0.0000 ||	Data/batch time: 0.2326/1.2009
[cap_102_OT_v6_1_4gpu]	epoch/iter [84/600][100/391] ||	Loss: 1.2151, Top1_err: 7.0003, Top5_err: 0.3094 ||	Data/batch time: 0.0028/0.9486
[cap_102_OT_v6_1_4gpu]	epoch/iter [84/600][200/391] ||	Loss: 1.1927, Top1_err: 6.9496, Top5_err: 0.2643 ||	Data/batch time: 0.0017/0.9470
[cap_102_OT_v6_1_4gpu]	epoch/iter [84/600][300/391] ||	Loss: 1.1220, Top1_err: 7.3012, Top5_err: 0.2570 ||	Data/batch time: 0.0013/0.9463
[cap_102_OT_v6_1_4gpu]	epoch/iter [84/600][390/391] ||	Loss: 1.1021, Top1_err: 7.4400, Top5_err: 0.2760 ||	Data/batch time: 0.0011/0.9444
Summary	epoch/iter [84/600] ||	TRAIN, Top1_err: 7.4400, Top5_err: 0.2760 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [85/600][0/391] ||	Loss: 0.8665, Top1_err: 7.0312, Top5_err: 0.7812 ||	Data/batch time: 0.2263/1.2371
[cap_102_OT_v6_1_4gpu]	epoch/iter [85/600][100/391] ||	Loss: 1.2443, Top1_err: 7.1395, Top5_err: 0.2553 ||	Data/batch time: 0.0027/0.9439
[cap_102_OT_v6_1_4gpu]	epoch/iter [85/600][200/391] ||	Loss: 1.1335, Top1_err: 6.8719, Top5_err: 0.2449 ||	Data/batch time: 0.0016/0.9430
[cap_102_OT_v6_1_4gpu]	epoch/iter [85/600][300/391] ||	Loss: 1.0628, Top1_err: 6.7483, Top5_err: 0.2362 ||	Data/batch time: 0.0012/0.9415
[cap_102_OT_v6_1_4gpu]	epoch/iter [85/600][390/391] ||	Loss: 0.9719, Top1_err: 6.8960, Top5_err: 0.2600 ||	Data/batch time: 0.0011/0.9425
Summary	epoch/iter [85/600] ||	TRAIN, Top1_err: 6.8960, Top5_err: 0.2600 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [86/600][0/391] ||	Loss: 0.7794, Top1_err: 7.0312, Top5_err: 0.0000 ||	Data/batch time: 0.2547/1.1994
[cap_102_OT_v6_1_4gpu]	epoch/iter [86/600][100/391] ||	Loss: 0.8998, Top1_err: 5.6312, Top5_err: 0.2088 ||	Data/batch time: 0.0030/0.9477
[cap_102_OT_v6_1_4gpu]	epoch/iter [86/600][200/391] ||	Loss: 0.8832, Top1_err: 5.7447, Top5_err: 0.1905 ||	Data/batch time: 0.0018/0.9469
[cap_102_OT_v6_1_4gpu]	epoch/iter [86/600][300/391] ||	Loss: 0.8701, Top1_err: 5.8840, Top5_err: 0.2050 ||	Data/batch time: 0.0014/0.9460
[cap_102_OT_v6_1_4gpu]	epoch/iter [86/600][390/391] ||	Loss: 0.8371, Top1_err: 5.8500, Top5_err: 0.1980 ||	Data/batch time: 0.0012/0.9446
Summary	epoch/iter [86/600] ||	TRAIN, Top1_err: 5.8500, Top5_err: 0.1980 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [87/600][0/391] ||	Loss: 1.3490, Top1_err: 6.2500, Top5_err: 0.7812 ||	Data/batch time: 0.2202/1.1539
[cap_102_OT_v6_1_4gpu]	epoch/iter [87/600][100/391] ||	Loss: 0.7979, Top1_err: 4.3704, Top5_err: 0.1392 ||	Data/batch time: 0.0027/0.9464
[cap_102_OT_v6_1_4gpu]	epoch/iter [87/600][200/391] ||	Loss: 0.7489, Top1_err: 4.5592, Top5_err: 0.1322 ||	Data/batch time: 0.0016/0.9461
[cap_102_OT_v6_1_4gpu]	epoch/iter [87/600][300/391] ||	Loss: 0.7382, Top1_err: 4.8277, Top5_err: 0.1635 ||	Data/batch time: 0.0012/0.9464
[cap_102_OT_v6_1_4gpu]	epoch/iter [87/600][390/391] ||	Loss: 0.7551, Top1_err: 4.8460, Top5_err: 0.1580 ||	Data/batch time: 0.0011/0.9464
Summary	epoch/iter [87/600] ||	TRAIN, Top1_err: 4.8460, Top5_err: 0.1580 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [88/600][0/391] ||	Loss: 1.6479, Top1_err: 4.6875, Top5_err: 0.0000 ||	Data/batch time: 0.2266/1.1738
[cap_102_OT_v6_1_4gpu]	epoch/iter [88/600][100/391] ||	Loss: 0.8490, Top1_err: 4.3162, Top5_err: 0.1702 ||	Data/batch time: 0.0028/0.9459
[cap_102_OT_v6_1_4gpu]	epoch/iter [88/600][200/391] ||	Loss: 0.8215, Top1_err: 4.1356, Top5_err: 0.1477 ||	Data/batch time: 0.0016/0.9430
[cap_102_OT_v6_1_4gpu]	epoch/iter [88/600][300/391] ||	Loss: 0.8240, Top1_err: 4.2359, Top5_err: 0.1453 ||	Data/batch time: 0.0013/0.9429
[cap_102_OT_v6_1_4gpu]	epoch/iter [88/600][390/391] ||	Loss: 0.8278, Top1_err: 4.4400, Top5_err: 0.1380 ||	Data/batch time: 0.0011/0.9433
Summary	epoch/iter [88/600] ||	TRAIN, Top1_err: 4.4400, Top5_err: 0.1380 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [89/600][0/391] ||	Loss: 0.3979, Top1_err: 5.4688, Top5_err: 0.0000 ||	Data/batch time: 0.2341/1.1616
[cap_102_OT_v6_1_4gpu]	epoch/iter [89/600][100/391] ||	Loss: 0.8610, Top1_err: 3.7825, Top5_err: 0.1006 ||	Data/batch time: 0.0028/0.9464
[cap_102_OT_v6_1_4gpu]	epoch/iter [89/600][200/391] ||	Loss: 0.8973, Top1_err: 3.9179, Top5_err: 0.0894 ||	Data/batch time: 0.0017/0.9455
[cap_102_OT_v6_1_4gpu]	epoch/iter [89/600][300/391] ||	Loss: 0.8550, Top1_err: 4.0594, Top5_err: 0.1142 ||	Data/batch time: 0.0013/0.9444
[cap_102_OT_v6_1_4gpu]	epoch/iter [89/600][390/391] ||	Loss: 0.8255, Top1_err: 4.2800, Top5_err: 0.1220 ||	Data/batch time: 0.0011/0.9448
Summary	epoch/iter [89/600] ||	TRAIN, Top1_err: 4.2800, Top5_err: 0.1220 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [90/600][0/391] ||	Loss: 0.6380, Top1_err: 1.5625, Top5_err: 0.0000 ||	Data/batch time: 0.2089/1.1775
[cap_102_OT_v6_1_4gpu]	epoch/iter [90/600][100/391] ||	Loss: 0.7040, Top1_err: 4.0919, Top5_err: 0.0851 ||	Data/batch time: 0.0026/0.9444
[cap_102_OT_v6_1_4gpu]	epoch/iter [90/600][200/391] ||	Loss: 0.7042, Top1_err: 3.9257, Top5_err: 0.0972 ||	Data/batch time: 0.0015/0.9433
[cap_102_OT_v6_1_4gpu]	epoch/iter [90/600][300/391] ||	Loss: 0.7792, Top1_err: 4.0049, Top5_err: 0.1116 ||	Data/batch time: 0.0012/0.9428
[cap_102_OT_v6_1_4gpu]	epoch/iter [90/600][390/391] ||	Loss: 0.8172, Top1_err: 4.0640, Top5_err: 0.1280 ||	Data/batch time: 0.0010/0.9423
Summary	epoch/iter [90/600] ||	TRAIN, Top1_err: 4.0640, Top5_err: 0.1280 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [91/600][0/391] ||	Loss: 1.2300, Top1_err: 0.7812, Top5_err: 0.0000 ||	Data/batch time: 0.2138/1.1481
[cap_102_OT_v6_1_4gpu]	epoch/iter [91/600][100/391] ||	Loss: 0.8418, Top1_err: 3.3338, Top5_err: 0.0619 ||	Data/batch time: 0.0026/0.9435
[cap_102_OT_v6_1_4gpu]	epoch/iter [91/600][200/391] ||	Loss: 0.7878, Top1_err: 3.5603, Top5_err: 0.0505 ||	Data/batch time: 0.0016/0.9423
[cap_102_OT_v6_1_4gpu]	epoch/iter [91/600][300/391] ||	Loss: 0.7855, Top1_err: 3.7869, Top5_err: 0.0857 ||	Data/batch time: 0.0012/0.9429
[cap_102_OT_v6_1_4gpu]	epoch/iter [91/600][390/391] ||	Loss: 0.8092, Top1_err: 3.8600, Top5_err: 0.1040 ||	Data/batch time: 0.0010/0.9439
Summary	epoch/iter [91/600] ||	TRAIN, Top1_err: 3.8600, Top5_err: 0.1040 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [92/600][0/391] ||	Loss: 0.6581, Top1_err: 3.1250, Top5_err: 0.0000 ||	Data/batch time: 0.2348/1.1944
[cap_102_OT_v6_1_4gpu]	epoch/iter [92/600][100/391] ||	Loss: 0.9938, Top1_err: 3.4035, Top5_err: 0.1083 ||	Data/batch time: 0.0028/0.9459
[cap_102_OT_v6_1_4gpu]	epoch/iter [92/600][200/391] ||	Loss: 0.9406, Top1_err: 3.5292, Top5_err: 0.1205 ||	Data/batch time: 0.0017/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [92/600][300/391] ||	Loss: 0.8957, Top1_err: 4.4825, Top5_err: 0.1687 ||	Data/batch time: 0.0013/0.9432
[cap_102_OT_v6_1_4gpu]	epoch/iter [92/600][390/391] ||	Loss: 0.8630, Top1_err: 4.8780, Top5_err: 0.1860 ||	Data/batch time: 0.0011/0.9432
Summary	epoch/iter [92/600] ||	TRAIN, Top1_err: 4.8780, Top5_err: 0.1860 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [93/600][0/391] ||	Loss: 1.3786, Top1_err: 3.1250, Top5_err: 0.0000 ||	Data/batch time: 0.2207/1.1958
[cap_102_OT_v6_1_4gpu]	epoch/iter [93/600][100/391] ||	Loss: 0.9805, Top1_err: 4.8422, Top5_err: 0.1392 ||	Data/batch time: 0.0027/0.9446
[cap_102_OT_v6_1_4gpu]	epoch/iter [93/600][200/391] ||	Loss: 1.0382, Top1_err: 4.7847, Top5_err: 0.1788 ||	Data/batch time: 0.0016/0.9449
[cap_102_OT_v6_1_4gpu]	epoch/iter [93/600][300/391] ||	Loss: 1.2306, Top1_err: 4.6304, Top5_err: 0.1583 ||	Data/batch time: 0.0012/0.9436
[cap_102_OT_v6_1_4gpu]	epoch/iter [93/600][390/391] ||	Loss: 1.2303, Top1_err: 4.5860, Top5_err: 0.1620 ||	Data/batch time: 0.0011/0.9439
Summary	epoch/iter [93/600] ||	TRAIN, Top1_err: 4.5860, Top5_err: 0.1620 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [94/600][0/391] ||	Loss: 0.8948, Top1_err: 3.1250, Top5_err: 0.0000 ||	Data/batch time: 0.2286/1.1637
[cap_102_OT_v6_1_4gpu]	epoch/iter [94/600][100/391] ||	Loss: 1.0119, Top1_err: 3.7438, Top5_err: 0.1470 ||	Data/batch time: 0.0028/0.9468
[cap_102_OT_v6_1_4gpu]	epoch/iter [94/600][200/391] ||	Loss: 0.8861, Top1_err: 4.1744, Top5_err: 0.1516 ||	Data/batch time: 0.0016/0.9448
[cap_102_OT_v6_1_4gpu]	epoch/iter [94/600][300/391] ||	Loss: 0.9238, Top1_err: 4.6901, Top5_err: 0.1687 ||	Data/batch time: 0.0013/0.9439
[cap_102_OT_v6_1_4gpu]	epoch/iter [94/600][390/391] ||	Loss: 0.9525, Top1_err: 4.7820, Top5_err: 0.1600 ||	Data/batch time: 0.0011/0.9434
Summary	epoch/iter [94/600] ||	TRAIN, Top1_err: 4.7820, Top5_err: 0.1600 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [95/600][0/391] ||	Loss: 0.9756, Top1_err: 3.9062, Top5_err: 0.0000 ||	Data/batch time: 0.2300/1.2026
[cap_102_OT_v6_1_4gpu]	epoch/iter [95/600][100/391] ||	Loss: 1.0545, Top1_err: 3.5427, Top5_err: 0.1238 ||	Data/batch time: 0.0028/0.9535
[cap_102_OT_v6_1_4gpu]	epoch/iter [95/600][200/391] ||	Loss: 1.0944, Top1_err: 3.6808, Top5_err: 0.1283 ||	Data/batch time: 0.0016/0.9555
[cap_102_OT_v6_1_4gpu]	epoch/iter [95/600][300/391] ||	Loss: 1.1125, Top1_err: 3.8050, Top5_err: 0.1168 ||	Data/batch time: 0.0013/0.9567
[cap_102_OT_v6_1_4gpu]	epoch/iter [95/600][390/391] ||	Loss: 1.1484, Top1_err: 3.9460, Top5_err: 0.1120 ||	Data/batch time: 0.0011/0.9540
Summary	epoch/iter [95/600] ||	TRAIN, Top1_err: 3.9460, Top5_err: 0.1120 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [96/600][0/391] ||	Loss: 1.6718, Top1_err: 0.0000, Top5_err: 0.0000 ||	Data/batch time: 0.2087/1.2061
[cap_102_OT_v6_1_4gpu]	epoch/iter [96/600][100/391] ||	Loss: 1.2706, Top1_err: 3.2410, Top5_err: 0.1006 ||	Data/batch time: 0.0026/0.9445
[cap_102_OT_v6_1_4gpu]	epoch/iter [96/600][200/391] ||	Loss: 1.2116, Top1_err: 3.3699, Top5_err: 0.1205 ||	Data/batch time: 0.0015/0.9436
[cap_102_OT_v6_1_4gpu]	epoch/iter [96/600][300/391] ||	Loss: 1.1034, Top1_err: 3.3846, Top5_err: 0.1168 ||	Data/batch time: 0.0012/0.9428
[cap_102_OT_v6_1_4gpu]	epoch/iter [96/600][390/391] ||	Loss: 1.1040, Top1_err: 3.5500, Top5_err: 0.1200 ||	Data/batch time: 0.0010/0.9421
Summary	epoch/iter [96/600] ||	TRAIN, Top1_err: 3.5500, Top5_err: 0.1200 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [97/600][0/391] ||	Loss: 0.1676, Top1_err: 5.4688, Top5_err: 0.0000 ||	Data/batch time: 0.2845/1.2099
[cap_102_OT_v6_1_4gpu]	epoch/iter [97/600][100/391] ||	Loss: 0.9532, Top1_err: 3.6665, Top5_err: 0.0696 ||	Data/batch time: 0.0033/0.9430
[cap_102_OT_v6_1_4gpu]	epoch/iter [97/600][200/391] ||	Loss: 1.0593, Top1_err: 3.7508, Top5_err: 0.1166 ||	Data/batch time: 0.0019/0.9433
[cap_102_OT_v6_1_4gpu]	epoch/iter [97/600][300/391] ||	Loss: 1.0001, Top1_err: 3.6804, Top5_err: 0.1324 ||	Data/batch time: 0.0014/0.9458
[cap_102_OT_v6_1_4gpu]	epoch/iter [97/600][390/391] ||	Loss: 0.9834, Top1_err: 3.7440, Top5_err: 0.1380 ||	Data/batch time: 0.0012/0.9489
Summary	epoch/iter [97/600] ||	TRAIN, Top1_err: 3.7440, Top5_err: 0.1380 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [98/600][0/391] ||	Loss: 0.8917, Top1_err: 1.5625, Top5_err: 0.0000 ||	Data/batch time: 0.2245/1.2005
[cap_102_OT_v6_1_4gpu]	epoch/iter [98/600][100/391] ||	Loss: 0.9909, Top1_err: 3.3493, Top5_err: 0.0696 ||	Data/batch time: 0.0027/0.9627
[cap_102_OT_v6_1_4gpu]	epoch/iter [98/600][200/391] ||	Loss: 1.0426, Top1_err: 3.3349, Top5_err: 0.0777 ||	Data/batch time: 0.0016/0.9612
[cap_102_OT_v6_1_4gpu]	epoch/iter [98/600][300/391] ||	Loss: 1.0295, Top1_err: 3.4183, Top5_err: 0.1012 ||	Data/batch time: 0.0012/0.9597
[cap_102_OT_v6_1_4gpu]	epoch/iter [98/600][390/391] ||	Loss: 0.9711, Top1_err: 3.6160, Top5_err: 0.1240 ||	Data/batch time: 0.0011/0.9550
Summary	epoch/iter [98/600] ||	TRAIN, Top1_err: 3.6160, Top5_err: 0.1240 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

[cap_102_OT_v6_1_4gpu]	epoch/iter [99/600][0/391] ||	Loss: 0.7004, Top1_err: 3.9062, Top5_err: 0.0000 ||	Data/batch time: 0.2439/1.2355
[cap_102_OT_v6_1_4gpu]	epoch/iter [99/600][100/391] ||	Loss: 0.9072, Top1_err: 3.5736, Top5_err: 0.1238 ||	Data/batch time: 0.0029/0.9438
[cap_102_OT_v6_1_4gpu]	epoch/iter [99/600][200/391] ||	Loss: 0.8531, Top1_err: 3.5215, Top5_err: 0.1049 ||	Data/batch time: 0.0017/0.9433
[cap_102_OT_v6_1_4gpu]	epoch/iter [99/600][300/391] ||	Loss: 0.9509, Top1_err: 4.1450, Top5_err: 0.1583 ||	Data/batch time: 0.0013/0.9425
[cap_102_OT_v6_1_4gpu]	epoch/iter [99/600][390/391] ||	Loss: 0.9690, Top1_err: 4.2880, Top5_err: 0.1720 ||	Data/batch time: 0.0011/0.9432
Summary	epoch/iter [99/600] ||	TRAIN, Top1_err: 4.2880, Top5_err: 0.1720 ||	TEST, Top1_err: 100.0000, Top5_err: 100.0000 ||

model saved at result/cap_102_OT_v6_1_4gpu/epoch_100.pth
[cap_102_OT_v6_1_4gpu]	epoch/iter [100/600][0/391] ||	Loss: 0.5724, Top1_err: 3.9062, Top5_err: 0.0000 ||	Data/batch time: 0.2284/1.1926
[cap_102_OT_v6_1_4gpu]	epoch/iter [100/600][100/391] ||	Loss: 1.2009, Top1_err: 3.5736, Top5_err: 0.0928 ||	Data/batch time: 0.0028/0.9443
[cap_102_OT_v6_1_4gpu]	epoch/iter [100/600][200/391] ||	Loss: 1.1923, Top1_err: 3.6964, Top5_err: 0.1049 ||	Data/batch time: 0.0016/0.9425
[cap_102_OT_v6_1_4gpu]	epoch/iter [100/600][300/391] ||	Loss: 1.2361, Top1_err: 4.1009, Top5_err: 0.1402 ||	Data/batch time: 0.0013/0.9418
[cap_102_OT_v6_1_4gpu]	epoch/iter [100/600][390/391] ||	Loss: 1.1781, Top1_err: 4.3780, Top5_err: 0.1520 ||	Data/batch time: 0.0011/0.9421
