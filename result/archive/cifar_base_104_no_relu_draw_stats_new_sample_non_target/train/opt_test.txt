Experiment: cifar_base_104_no_relu_draw_stats_new_sample_non_target
------------ Test Options -----------------
b_init: zero
basenet: vgg16_reducedfc.pth
batch_size: 2
beta1: 0.5
cap_N: 3
dataset: cifar
debug: False
deploy: True
do_squash: False
draw_hist: True
epochs: 300
experiment_name: cifar_base_104_no_relu_draw_stats_new_sample_non_target
file_name: result/cifar_base_104_no_relu_draw_stats_new_sample_non_target/train/opt_test.txt
gamma: 0.1
has_relu_in_W: False
look_into_details: False
lr: 0.01
manual_seed: 2000
max_epoch: 0
max_iter: 130000
model_cifar: capsule
momentum: 0.9
no_pretrain: False
non_target_j: True
num_workers: 2
optim: sgd
phase: test
port: 2000
prior_config: v2_512
resume: None
route_num: 4
save_epoch: 20
save_folder: result/cifar_base_104_no_relu_draw_stats_new_sample_non_target/train
schedule: [80000, 100000, 120000]
schedule_cifar: [150, 225]
scheduler: None
send_images_to_visdom: False
show_freq: 20
show_test_after_epoch: -1
skip_pre_squash: False
skip_pre_transfer: False
ssd_dim: 512
start_epoch: 1
test_batch: 128
test_only: True
train_batch: 128
use_CE_loss: False
use_cuda: True
version: v2
visdom: True
w_version: v2
weight_decay: 0.0005
------------------ End --------------------
CapsNet (
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True)
  (relu): ReLU (inplace)
  (layer1): Sequential (
    (0): BasicBlock (
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True)
    )
    (1): BasicBlock (
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True)
    )
    (2): BasicBlock (
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True)
    )
  )
  (layer2): Sequential (
    (0): BasicBlock (
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
      (downsample): Sequential (
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
      )
    )
    (1): BasicBlock (
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    )
    (2): BasicBlock (
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    )
  )
  (layer3): Sequential (
    (0): BasicBlock (
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
      (downsample): Sequential (
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
      )
    )
    (1): BasicBlock (
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    )
    (2): BasicBlock (
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    )
  )
  (tranfer_conv): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1))
  (tranfer_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (tranfer_relu): ReLU (inplace)
  (avgpool): AvgPool2d (size=6, stride=6, padding=0, ceil_mode=False, count_include_pad=True)
  (fc): Linear (256 -> 10)
  (cap_layer): CapLayer (
    (W): Conv2d(256, 5120, kernel_size=(1, 1), stride=(1, 1), groups=32)
  )
)
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [0/79]		data: 0.201s | batch: 1.256s	loss 0.75692	acc: 11.71875
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [20/79]		data: 0.011s | batch: 0.140s	loss 0.85274	acc: 10.30506
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [40/79]		data: 0.006s | batch: 0.106s	loss 0.85633	acc: 10.82317
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [60/79]		data: 0.005s | batch: 0.093s	loss 0.84828	acc: 10.82223
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [78/79]		data: 0.004s | batch: 0.088s	loss 0.85528	acc: 10.96000
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [0/79]		data: 0.150s | batch: 0.232s	loss 0.24439	acc: 67.96875
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [20/79]		data: 0.009s | batch: 0.088s	loss 0.25130	acc: 66.18304
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [40/79]		data: 0.005s | batch: 0.079s	loss 0.24924	acc: 66.61585
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [60/79]		data: 0.004s | batch: 0.076s	loss 0.25520	acc: 65.81711
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [78/79]		data: 0.003s | batch: 0.074s	loss 0.25393	acc: 66.00000
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [0/79]		data: 0.209s | batch: 0.283s	loss 0.12836	acc: 84.37500
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [20/79]		data: 0.012s | batch: 0.095s	loss 0.16251	acc: 78.86905
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [40/79]		data: 0.007s | batch: 0.083s	loss 0.16444	acc: 79.05869
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [60/79]		data: 0.005s | batch: 0.079s	loss 0.16585	acc: 78.54764
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [78/79]		data: 0.004s | batch: 0.077s	loss 0.16509	acc: 78.46000
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [0/79]		data: 0.228s | batch: 0.300s	loss 0.11457	acc: 85.93750
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [20/79]		data: 0.013s | batch: 0.095s	loss 0.14774	acc: 80.76637
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [40/79]		data: 0.007s | batch: 0.084s	loss 0.15378	acc: 80.37348
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [60/79]		data: 0.005s | batch: 0.079s	loss 0.15416	acc: 80.40471
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [78/79]		data: 0.005s | batch: 0.077s	loss 0.15320	acc: 80.57000
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [0/79]		data: 0.225s | batch: 0.300s	loss 0.12214	acc: 84.37500
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [20/79]		data: 0.012s | batch: 0.094s	loss 0.13924	acc: 82.51488
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [40/79]		data: 0.007s | batch: 0.083s	loss 0.14649	acc: 81.49771
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [60/79]		data: 0.005s | batch: 0.078s	loss 0.14513	acc: 81.68545
Test [cifar_base_104_no_relu_draw_stats_new_sample_non_target]	epoch [0/0]	iter [78/79]		data: 0.004s | batch: 0.076s	loss 0.14392	acc: 81.80000
